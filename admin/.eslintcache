[{"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/Signup.js":"1","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Toolbox.js":"2","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/dashboard/CheckList.js":"3","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Edit.js":"4","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/MainWrapper.js":"5","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/BodyWrapper.js":"6","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ToolbarBottom.js":"7","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/dashboard/Greeting.js":"8","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/NavBar.js":"9","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Alert.js":"10","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Hero.js":"11","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Container.js":"12","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/App.js":"13","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/Admin.js":"14","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/BarLabels.js":"15","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Card.js":"16","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Button.js":"17","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ToolbarLeft.js":"18","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Text.js":"19","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Dashboard.js":"20","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Inquiries.js":"21","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Template.js":"22","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/NavItem.js":"23","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Settings.js":"24","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Image.js":"25","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/index.js":"26","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/NoAccess.js":"27","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/Login.js":"28","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/index.js":"29","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Content.js":"30","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Pages.js":"31","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/ErrorPage.js":"32","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Avatar.js":"33","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/SettingsPanel.js":"34","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Analytics.js":"35","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Toolbar.js":"36","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/User.js":"37","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Sidebar.js":"38","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/EditFrame.js":"39","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ToolWrapper.js":"40","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/AddPage.js":"41","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/SnackBarNotification.js":"42","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/SettingsPanelExtension.js":"43","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ColumnContainer.js":"44","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Column.js":"45","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/modules/FocusHandler.js":"46","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/Step3.js":"47","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/Step2.js":"48","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/Step1.js":"49","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/modules/FormValidate.js":"50","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/index.js":"51","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Resizer.js":"52","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/settings/ProfileSettings.js":"53","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/settings/NotificationSettings.js":"54","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/settings/AdvancedSettings.js":"55"},{"size":1937,"mtime":1612084537391,"results":"56","hashOfConfig":"57"},{"size":4363,"mtime":1612085478377,"results":"58","hashOfConfig":"57"},{"size":1469,"mtime":1612084862518,"results":"59","hashOfConfig":"57"},{"size":2289,"mtime":1612085578910,"results":"60","hashOfConfig":"57"},{"size":173,"mtime":1612085194615,"results":"61","hashOfConfig":"57"},{"size":234,"mtime":1612084898950,"results":"62","hashOfConfig":"57"},{"size":3334,"mtime":1612085387331,"results":"63","hashOfConfig":"57"},{"size":193,"mtime":1612084869424,"results":"64","hashOfConfig":"57"},{"size":6973,"mtime":1611334063486,"results":"65","hashOfConfig":"57"},{"size":1315,"mtime":1612084675446,"results":"66","hashOfConfig":"57"},{"size":7085,"mtime":1612921669120,"results":"67","hashOfConfig":"57"},{"size":551,"mtime":1612085080341,"results":"68","hashOfConfig":"57"},{"size":1634,"mtime":1612836431462,"results":"69","hashOfConfig":"57"},{"size":1549,"mtime":1612635571633,"results":"70","hashOfConfig":"57"},{"size":1201,"mtime":1612922344422,"results":"71","hashOfConfig":"57"},{"size":1598,"mtime":1612084957715,"results":"72","hashOfConfig":"57"},{"size":6740,"mtime":1612084932997,"results":"73","hashOfConfig":"57"},{"size":2372,"mtime":1612085453552,"results":"74","hashOfConfig":"57"},{"size":10524,"mtime":1612085339018,"results":"75","hashOfConfig":"57"},{"size":309,"mtime":1612085571608,"results":"76","hashOfConfig":"57"},{"size":173,"mtime":1612085622201,"results":"77","hashOfConfig":"57"},{"size":1450,"mtime":1612085849778,"results":"78","hashOfConfig":"57"},{"size":5602,"mtime":1612085286234,"results":"79","hashOfConfig":"57"},{"size":884,"mtime":1612636696785,"results":"80","hashOfConfig":"57"},{"size":11347,"mtime":1612918965342,"results":"81","hashOfConfig":"57"},{"size":689,"mtime":1612085494121,"results":"82","hashOfConfig":"57"},{"size":499,"mtime":1611024940190,"results":"83","hashOfConfig":"57"},{"size":3933,"mtime":1612084453862,"results":"84","hashOfConfig":"57"},{"size":543,"mtime":1611024803743,"results":"85","hashOfConfig":"57"},{"size":164,"mtime":1612084737622,"results":"86","hashOfConfig":"57"},{"size":2019,"mtime":1612085682547,"results":"87","hashOfConfig":"57"},{"size":478,"mtime":1611024824285,"results":"88","hashOfConfig":"57"},{"size":558,"mtime":1612084709536,"results":"89","hashOfConfig":"57"},{"size":1701,"mtime":1612122826804,"results":"90","hashOfConfig":"57"},{"size":174,"mtime":1612085556767,"results":"91","hashOfConfig":"57"},{"size":2365,"mtime":1612637251123,"results":"92","hashOfConfig":"57"},{"size":2188,"mtime":1612922104962,"results":"93","hashOfConfig":"57"},{"size":659,"mtime":1612084749768,"results":"94","hashOfConfig":"57"},{"size":2052,"mtime":1612121059635,"results":"95","hashOfConfig":"57"},{"size":151,"mtime":1612085362092,"results":"96","hashOfConfig":"57"},{"size":2667,"mtime":1612084691584,"results":"97","hashOfConfig":"57"},{"size":522,"mtime":1612084799078,"results":"98","hashOfConfig":"57"},{"size":1438,"mtime":1611329935885,"results":"99","hashOfConfig":"57"},{"size":2438,"mtime":1612085058693,"results":"100","hashOfConfig":"57"},{"size":11309,"mtime":1612918960565,"results":"101","hashOfConfig":"57"},{"size":716,"mtime":1612081372224,"results":"102","hashOfConfig":"57"},{"size":8258,"mtime":1612085800815,"results":"103","hashOfConfig":"57"},{"size":7901,"mtime":1612085772461,"results":"104","hashOfConfig":"57"},{"size":3105,"mtime":1612085866364,"results":"105","hashOfConfig":"57"},{"size":2254,"mtime":1612085528970,"results":"106","hashOfConfig":"57"},{"size":248,"mtime":1611794721123,"results":"107","hashOfConfig":"57"},{"size":4250,"mtime":1612141638012,"results":"108","hashOfConfig":"57"},{"size":11726,"mtime":1613082319065,"results":"109","hashOfConfig":"57"},{"size":6330,"mtime":1612920743403,"results":"110","hashOfConfig":"57"},{"size":5891,"mtime":1612920953217,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},"8af81q",{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"115"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"115"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"129"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"139"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"115"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"139"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"115"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"121"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"115"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"129"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"121"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"115"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"129"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"121"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"115"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"115"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"197","usedDeprecatedRules":"115"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"129"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"115"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"115"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"115"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"121"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"121"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"121"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"115"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"129"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"115"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"121"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"234"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":4,"source":"259","usedDeprecatedRules":"121"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"115"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/Signup.js",["269","270","271"],"import { React, useState, useEffect } from \"react\";\n\nimport axios from 'axios'\nimport signup from './signup.module.css';\nimport FocusHandler from './modules/FocusHandler'\nimport { Step1, Step2, Step3 } from './pages/signup'\n\nfunction Signup() { \n\n  const [user, setUser] = useState({name: '', email: '', password: ''});\n  const [focused, setFocus] = useState({password:false});\n\n  const toSecond = (changed) => {\n    nextStep()\n    setTimeout(() => {\n     setStep(<Step2 next={toLast} back={toFirst} user={changed} />)\n    }, 250)\n  }\n  const toFirst = (changed) => {\n    const signupform = document.getElementById('signupform');\n    signupform.style.opacity = 0;\n    signupform.style.width = '50%';\n      setStep(<Step1 setUser={setUser} user={changed} next={toSecond} />)\n\n    setTimeout(() => {\n      signupform.style.opacity = 1\n    }, 250)\n  }\n  const toLast = (changed) => {\n    nextStep()\n    setTimeout(() => {\n     setStep(<Step3 back={toSecond} user={changed} />)\n    }, 250)\n  }\n  const [step, setStep] = useState(<Step1 setUser={setUser} user={user} next={toSecond} />);\n\n  useEffect( () => {\n    FocusHandler(focused)\n  });\n  const nextStep = (e) => {\n    const signupform = document.getElementById('signupform');\n    signupform.style.opacity = 0;\n    signupform.style.width = '200%';\n    setTimeout(() => {\n      signupform.style.opacity = 1\n    }, 250)\n  }\n  \n\n  return (\n    <div className={signup.wrapper}>\n      <div id=\"signupform\" className={signup.left}>\n          { step }\n      </div>\n     <div className={signup.right}>\n        <h1> Create. Build. Edit. </h1>\n        <img src='./computer.png' />'\n        <h2> ALL-IN-ONE </h2>\n        <h3> Composable Cloud Portfolio </h3>\n        <h4> An online portfolio manager with a drag and drop page builder that gives you the freedom to easily manage your online portfolio to grow your as your experience does. </h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;",["272","273"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Toolbox.js",["274","275","276","277","278","279","280","281","282"],"import { useState} from 'react';\nimport edit from '../../edit.module.css';\nimport { useEditor, useNode } from \"@craftjs/core\";\nimport { Button } from './Button'\nimport  Text  from './Text'\nimport  Card  from './Card'\nimport  NavBar  from './NavBar'\nimport  NavItem  from './NavItem'\nimport  ColumnContainer  from './ColumnContainer'\nimport  Column  from './Column'\nimport  Hero  from './Hero'\nimport  Image  from './Image'\n\nexport const Toolbox = () => {\n\nconst [dragging, setDragging] = useState();\n\nconst { query, actions } = useEditor((state, query) => ({\n    }));\n  \n  const { ...collected } = useNode((collector) => {\n    return collector\n  }); \n\n  const duplicate = (e) => {\n//    console.log(collected, e.target.name)\n    if (e.target.innerHTML == ' Card Component ') {\n        var element = document.createElement('div');   // Create a <button> element\n        element.innerHTML = e.target.innerHTML;                   // Insert text\n        element.style.position = 'absolute';\n        element.style.height = '200px'\n        element.style.width = '100px'\n        element.style.border = '1px solid #333'\n        element.style.padding = \"10px\"\n        element.style.borderRadius = \"10px\"\n    }\n    else if (e.target.innerHTML == ' Navbar ') {\n       var element = document.createElement('div');   // Create a <button> element\n        element.innerHTML = e.target.innerHTML;                   // Insert text\n        element.style.position = 'absolute';\n        element.style.height = '50px'\n        element.style.width = '250px'\n        element.style.border = '1px solid #333'\n        element.style.background = \"rgba(0, 0, 0, 0.75)\"\n        element.style.color = \"#fefefe\"\n        element.style.borderRadius = \"10px\"\n        element.style.padding = \"10px\"\n        console.log(\"NAVBAR\")\n    } \n    else if (e.target.innerHTML == ' Bar Item ') {\n        var element = document.createElement('div');   // Create a <button> element\n        element.innerHTML = e.target.innerHTML;                   // Insert text\n        element.style.position = 'absolute';\n        element.style.height = '50px'\n        element.style.width = '100px'\n        element.style.border = '1px solid #ccc'\n        element.style.background = \"rgba(250, 250, 250, 0.75)\"\n        element.style.color = \"#333\"\n        element.style.borderRadius = \"10px\"\n        element.style.padding = \"10px\"\n    }\n    else {\n        var element = document.createElement(e.target.name);   // Create a <button> element\n        element.innerHTML = \"Component\";                   // Insert text\n        element.style.position = 'absolute';\n    }\n    element.style.zIndex = '25';\n    document.getElementById(\"root\").appendChild(element);               // Append <button> to <body>\n    setDragging(element);\n  }\n  const moveItem = (e) => {\n    if(dragging) {\n        dragging.style.top = window.scrollY + e.clientY + \"px\"\n        dragging.style.left = window.scrollX + e.clientX  + \"px\"\n    }\n  }\n  const clear = () => {\n   if(dragging) {\n        document.getElementById(\"root\").removeChild(dragging) \n    }\n  }\n\n  const { connectors } = useEditor();\n\treturn (\n\t\t<div className={edit.Toolbox}>\n        <div ref={(ref) => connectors.create(ref, <ColumnContainer />)}> Container </div>\n     \t<button name=\"button\" onDragStart={duplicate} onDrag={moveItem} onDragEnd={ clear } ref={(ref) => connectors.create(ref, <Button> Button Component </Button>)}> Button Component </button>\n     \t<div name=\"span\" onDragStart={duplicate} onDrag={moveItem} onDragEnd={ clear } ref={(ref) => connectors.create(ref, <Text text='text component' />)}> Text Component </div>\n     \t<div onDragStart={duplicate} onDrag={moveItem} onDragEnd={ clear } ref={(ref) => connectors.create(ref, <Card text='text component' />)}> Card Component </div>\n     \t<div onDragStart={duplicate} onDrag={moveItem} onDragEnd={ clear } ref={(ref) => connectors.create(ref, <NavBar text='Navbar Component' />)}> Navbar </div>\n     \t<div onDragStart={duplicate} onDrag={moveItem} onDragEnd={ clear } ref={(ref) => connectors.create(ref, <NavItem text='New Item' />)}> Bar Item </div>\n     \t<div ref={(ref) => connectors.create(ref, <Hero />)}> Hero Component </div>\n     \t<div ref={(ref) => connectors.create(ref, <Image />)}> Image Component </div>\n        <div ref={(ref) => connectors.create(ref, <Column />)}> Column Component </div>\n    </div>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/dashboard/CheckList.js",[],["283","284"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Edit.js",["285"],"import { useParams } from \"react-router-dom\"; \nimport { gql, useQuery } from \"@apollo/client\";\nimport edit from '../edit.module.css';\nimport { React } from 'react';\nimport  ToolbarLeft  from '../components/edit/ToolbarLeft'\nimport  ToolbarBottom  from '../components/edit/ToolbarBottom'\nimport  {Button}  from '../components/edit/Button'\nimport  Card  from '../components/edit/Card'\nimport  NavBar  from '../components/edit/NavBar'\nimport  Container  from '../components/edit/Container'\nimport  MainWrapper  from '../components/edit/MainWrapper'\nimport  ToolWrapper  from '../components/edit/ToolWrapper'\nimport  BodyWrapper  from '../components/edit/BodyWrapper'\nimport  Text  from '../components/edit/Text'\nimport  NavItem  from '../components/edit/NavItem'\nimport  Hero  from '../components/edit/Hero'\nimport  Image  from '../components/edit/Image'\nimport  SettingsPanel  from '../components/edit/SettingsPanel'\nimport  ColumnContainer  from '../components/edit/ColumnContainer'\nimport  Column  from '../components/edit/Column'\nimport { Editor, Element } from \"@craftjs/core\";\nimport  Template  from '../components/Template'\nimport  EditFrame  from './EditFrame'\n\n\n\nconst PAGE = gql`\n    query Pages($id: ID) {\n      page(id:$id) {\n        id\n        name\n        page_layout\n        owner {\n          id\n          name\n          pages {\n            id\n            name\n          }\n        }\n        components {\n          id\n          name\n        }\n      }\n    }`;\n\nexport default function Edit(props) {\n\n  let { page_id } = useParams();\n\n  const {loading, error, data} = useQuery(PAGE, {\n      variables: { id: page_id },\n    });\n\n  if (loading) return <> <div id=\"toolbar_left\" /> </>;\n  if (error) return window.location = 'http://localhost:3000/404';\n  if ( data.page.owner.id != props.user.id  ) return window.location = 'http://localhost:3000/noaccess'\n  return (\n    <div id=\"root\" className={edit.maincontainer}> \n      <Editor resolver={{ Column, ColumnContainer, Element, ToolWrapper, Card, Button, Text, Image, Container, NavBar, NavItem, MainWrapper, BodyWrapper, ToolbarLeft, ToolbarBottom, SettingsPanel, Template, Hero}}> \n      { data && data.page? \n      <EditFrame page={data.page} /> : <EditFrame page={data.page} />\n      }\n      </Editor> \n\n    </div>\n  ) \n    \n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/MainWrapper.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/BodyWrapper.js",[],["286","287"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ToolbarBottom.js",["288"],"import { useState, React } from 'react';\nimport edit from '../../edit.module.css';\nimport SnackBarNotification from '../SnackBarNotification'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDesktop, faSave, faUndo, faRedo, faFileExport, faHome } from '@fortawesome/free-solid-svg-icons'\nimport { useEditor } from \"@craftjs/core\";\nimport lz from \"lzutf8\";\nimport axios from 'axios'\n\n  export default function ToolbarBottom(props) {\n\n\n  const { actions, query, enabled } = useEditor((state) => ({\n    enabled: state.options.enabled\n  }));\n\n\n  const deleteprompt = (item) => {\n    document.getElementById(\"alertbox\").style.display = 'block';\n   }\n \n  const undo = () => {\n    actions.history.undo()\n  } \n  const redo = () => {\n    actions.history.redo()\n  }\n  const updatePage = () => {\n\n //   const toolbarbottom = document.getElementById('toolbar_bottom');\n //   const toolbarleft = document.getElementById('toolbar_left');\n\n    const json = query.serialize();\n  //  console.log(json)\n    const newJson = ( json.substring(0, json.indexOf(\"ToolWrapper\")-39) +  json.substring(json.indexOf(\"SettingsPanel\")+151));\n  //  console.log(newJson)\n    const final = ( newJson.substring(0, newJson.indexOf(\"nodes\")+20)) + newJson.substring(newJson.indexOf(\"nodes\")+33) \n\n //  console.log(final)\n //   copy(lz.encodeBase64(lz.compress(json)));\n  //  setstatetoload(prevState => ({ ...prevState, ['id']: props.page.id }));\n  //  setstatetoload(prevState => ({ ...prevState, ['page_layout']:(lz.encodeBase64(lz.compress(final))) })); \n\n    let token = localStorage.getItem(\"token\")\n    let data = {page_layout: (lz.encodeBase64(lz.compress(final))), id: props.page.id};\n    axios.post(\n      'http://localhost:3001/editpage', \n      data, \n      { \n        headers: { \n          Authorization: 'Bearer ' + token \n        }\n      }).then( () => { notification() } ).catch(error => { console.log(error.response) });\n\n  }\n  const notification = () => {\n    document.getElementById('SnackBarNotification').style.opacity = '1'\n    setTimeout(() => {\n      document.getElementById('SnackBarNotification').style.opacity = '0'\n    }, 2000)\n  }\n  const setActive = (_, value) => {\n\n    actions.setOptions(options => options.enabled = !options.enabled)\n    props.setActive();\n    if(enabled) {\n      document.getElementById('preview').style.color = '#989898'\n      document.getElementById('preview').style.background = '#FFF'\n\n    }\n    else {\n      document.getElementById('preview').style.color = '#7165E3'\n      document.getElementById('preview').style.background = '#F5F6FA'\n    }\n   }\n\n\treturn ( \n\t\t<div id=\"toolbar_bottom\" className={edit.toolbar_bottom}>\n    <FontAwesomeIcon id=\"preview\" onClick={() =>  setActive()  }  className={ edit.icon_active } icon={ faDesktop } />\n    <FontAwesomeIcon onClick={() => { window.location = 'http://localhost:3000/pages' }} className={ edit.icon } icon={ faHome } />\n    <FontAwesomeIcon onClick={updatePage}  className={ edit.icon } icon={ faSave } />\n\n    <FontAwesomeIcon onClick={( () => { deleteprompt({name: \"Arron\"}) } )} className={ edit.icon } icon={ faFileExport } />\n   \n    <FontAwesomeIcon onClick={undo} className={ edit.icon } icon={ faUndo } />\n    <FontAwesomeIcon onClick={redo} className={ edit.icon } icon={ faRedo } />\n    <SnackBarNotification />\n    </div>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/dashboard/Greeting.js",[],["289","290"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/NavBar.js",["291","292","293","294","295","296"],"import { useState, useEffect } from 'react';\nimport edit from '../../edit.module.css';\nimport  NavItem  from \"./NavItem\";\nimport {useNode, Element} from \"@craftjs/core\";\nimport { faLock, faPenNib, faFillDrip, faFont, } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport settings from '../../settings.module.css';\n\nexport default function NavBar({backgroundColor, height, boxShadow}) {\n\n\tconst { connectors: {connect, drag}, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n  }));\n\n  let draggedover = false;\n\n  const [editable, setEditable] = useState(false);\n  useEffect(() => {!selected && setEditable(false)}, [selected]);\n  \n\treturn (\n\n\t\t<div onClick={e => setEditable(true)} ref={ref => connect(drag(ref))} >\n    { selected? \n      <div style={{backgroundColor, height, boxShadow}} className={edit.NavBar}>\n          <Element className={edit.start} id=\"somethin\" canvas>\n            <NavItem className={edit.navitem} text=\"Company Logo\"  />\n          </Element>\n          <Element className={edit.middle} id=\"somethin1\" canvas> \n            <NavItem className={edit.navitem} text=\"Item\"  />\n          </Element>\n          <Element className={edit.end} id=\"somethin2\"  canvas>\n            <NavItem className={edit.navitem} text=\"Item\"  />\n          </Element>\n        </div>\n         : \n\n      <div style={{backgroundColor, height, boxShadow}} className={edit.NavBar}>\n          <Element className={edit.start} onMouseOut={() => draggedover = false} id=\"somethin\" canvas> \n            <NavItem text=\"Company Logo\" />\n          </Element>\n        <Element className={edit.middle} id=\"somethin1\" canvas>\n            <NavItem className={edit.navitem} text=\"Item\"  />\n          </Element>\n          <Element className={edit.end} id=\"somethin2\" canvas> \n            <NavItem className={edit.navitem} text=\"Item\"  />\n          </Element>\n        </div>\n    \t\t}\n    </div>\n\t\t\n\t)\n}\n\nexport const NavBarSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [focused, setFocus] = useState({});\n\n  const handleField = (e) => {\n    const { name } = e.target;\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n\n   useEffect( () => {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n\n  });\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n\n  return ( \n    <div className={settings.container}>\n     <table className={settings.left}>\n          <tr>\n            <td className={settings.label} id=\"fontFamily\">\n              Font\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"fontFamily_icon\" className={ settings.icon } icon={ faPenNib } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.fontFamily} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"fontFamily\" placeholder=\"Font-Family\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"color\">\n              Color\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"color_icon\" className={ settings.icon } icon={ faFillDrip } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.color} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"color\" placeholder=\"#FFFFFF\" /> <br />\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"border\">\n              Border\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"border_icon\" className={ settings.icon } icon={ faFillDrip } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.border} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"border\" placeholder=\"#FFFFFF\" /> <br />\n            </td>\n          </tr>\n          \n        </table>\n\n\n        <table className={settings.right}>\n          <tr>\n            <td className={settings.label} id=\"height\">\n              Height\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"height_icon\" className={ settings.icon } icon={ faFont } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.height} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"height\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"backgroundColor\">\n            BG Color\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"backgroundColor_icon\" className={ settings.icon } icon={ faLock } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.backgroundColor} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"backgroundColor\" placeholder=\"password\" /> <br />\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"borderRadius\">\n             Radius\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"borderRadius_icon\" className={ settings.icon } icon={ faFillDrip } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.borderRadius} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"borderRadius\" placeholder=\"#FFFFFF\" /> <br />\n            </td>\n          </tr>\n        </table>\n    </div>\n  )\n}\n\n\nNavBar.craft = {\n  props: { \n    height: \"100px\",\n    backgroundColor: \"#453D91\",\n    boxShadow: \"0px 0px 0px rgba(0, 0, 0, 0.5)\"\n  },\n  related: {\n    settings: NavBarSettings\n    }\n}\n",["297","298"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Alert.js",["299","300"],"import { useState } from 'react';\nimport admin from '../admin.module.css';\nimport axios from 'axios';\n\nexport default function Alert(props) {\n\n\tconst deletepage = () => {\n    let token = localStorage.getItem(\"token\")\n  \tlet data = props.page;\n  \taxios.post(\n      'http://localhost:3001/deletepage', \n      data, \n      { \n        headers: { \n          Authorization: 'Bearer ' + token \n        }\n      }).then( () => { closeprompt() } ).then( () => { props.refetch() } ).catch(error => { console.log(error.response) });\n  }\n\tconst closeprompt = () => {\n   \tconsole.log(props.page);\n   \tconst alert_type = 'alertbox';\n   \talert = document.getElementById(alert_type);\n   \talert.style.display = 'none';\n   }\n   \treturn (\n\t\t<div id=\"alertbox\" style={{display: 'none'}}>\n\t\t\t\t<div className={admin.overlay}>\n\t\t\t\t\t<div className={admin.alertbox}> \n\t\t\t\t\t\t<h1> Delete {props.page.name}? </h1>\n\t\t\t\t\t\t<div className={admin.content}> \n\t\t\t\t\t\t\t<p> Are you sure you want to delete this page? Once you press delete there is no way to recover your page.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={admin.actionbuttons}> \n\t\t\t\t\t\t\t<button onClick={closeprompt} className={admin.solid}> Cancel </button>\n\t\t\t\t\t\t\t<button onClick={deletepage} className={admin.invert}> Delete </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n   \n\t}\n","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Hero.js",["301","302","303","304","305","306","307","308"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Container.js",["309","310","311","312","313","314"],"import edit from '../../edit.module.css';\nimport { useNode } from '@craftjs/core';\nimport { useState, useEffect } from 'react';\n\nexport default function Container({background, children, padding = 0}) {\n\n  const { connectors: {connect, drag}, hovered, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n    hovered: state.events.hovered\n  }));\n  return (\n    <div ref={ref => connect(drag(ref))} className={edit.EditableContainer}>\n        {children}\n    </div>\n  )\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/App.js",["315","316","317"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/Admin.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/BarLabels.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Card.js",["318","319","320","321","322","323","324","325"],"import { useState, useEffect } from 'react';\nimport edit from '../../edit.module.css';\nimport  Text  from \"./Text\";\nimport  {Button}  from \"./Button\";\nimport  Container  from \"./Container\";\nimport {useNode, Element} from \"@craftjs/core\";\n\nexport default function Card({background, padding = 20}) {\n\n\tconst { connectors: {connect, drag}, hovered, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n    hovered: state.events.hovered\n  }));\n  const [editable, setEditable] = useState(false);\n  useEffect(() => {!selected && setEditable(false)}, [selected]);\n\n\treturn (\n\t\t<div onClick={e => setEditable(true)} ref={ref => connect(drag(ref))} className={edit.EditableText}>\n    \n    { selected? <div className={edit.textBorder}> \n      <div className={edit.Card}>\n   <Container background={background} padding={padding} >\n      <Element id=\"text\" canvas> // Canvas Node of type div\n        <Text text=\"Title\"  />\n        <Text text=\"Subtitle\"/>\n      </Element>\n      <Element id=\"buttons\" canvas> // Canvas Node of type div\n        <Button text=\"Learn more\" />\n      </Element>\n    </Container>\n    </div>\n    </div> : <div className={edit.Card}>\n   <Container background={background} padding={padding} >\n      <Element id=\"text\" canvas> // Canvas Node of type div\n        <Text text=\"Title\"  />\n        <Text text=\"Subtitle\"/>\n      </Element>\n      <Element id=\"buttons\" canvas> // Canvas Node of type div\n        <Button text=\"Learn more\" />\n      </Element>\n    </Container>\n    </div>\n\t\t}\n    \n    </div>\n\t\t\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Button.js",["326","327","328"],"import { useState, useEffect } from 'react';\nimport ContentEditable from 'react-contenteditable'\nimport edit from '../../edit.module.css';\nimport { useNode, useEditor } from \"@craftjs/core\";\nimport { faClone, faTrash, faLock, faPenNib, faFillDrip, faFont} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport settings from '../../settings.module.css';\nimport FocusHandler from '../../modules/FocusHandler'\n\nexport const Button = ({size, children, text, fontSize, textAlign, color, fontFamily, backgroundColor, borderRadius,  border}) => {\n\n  const { connectors: {connect, drag}, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged\n  }));\n  const [editable, setEditable] = useState(false);\n\n   const { query, actions } = useEditor((state, query) => ({\n    }));\n  \n  const { ...collected } = useNode((collector) => {\n    return collector\n  });\n  const duplicate = (e) => {\n    const parent = (collected.data.parent)\n    const node_to_make = {\n      data: collected.data\n    }\n    console.log(node_to_make)\n    const node = query.parseFreshNode(node_to_make).toNode();\n    actions.add(node, parent);\n  }\n  const delete_node = () => {\n    actions.delete(collected.id)\n  }\n\n\treturn (\n\t\t<div onClick={e => setEditable(true)} ref={ref => connect(drag(ref))} className={edit.EditableText}>\n    { selected? <button className={edit.textBorder}> \n    <div className={edit.options} >  \n      <FontAwesomeIcon onClick={duplicate} id=\"color_icon\" className={ edit.icon } icon={ faClone } />\n      <FontAwesomeIcon onClick={delete_node} id=\"color_icon\" className={ edit.icon } icon={ faTrash } /> \n    </div>\n      <ContentEditable disabled={!editable} html={text} \n        onChange={e => \n          setProp(props => \n            props.text = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n          )\n        } \n        tagName=\"button\"\n        style={{fontSize: `${fontSize}px`, textAlign, color, fontFamily, backgroundColor, borderRadius, border}}/> </button> : \n        <button style={{fontSize: `${fontSize}px`, textAlign, color, fontFamily, backgroundColor, borderRadius, border}}>{text}</button>\n    }\n    </div>\n\t)\n}\n\nexport const ButtonSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [focused, setFocus] = useState({});\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n\n  useEffect( () => {\n    FocusHandler(focused)\n  });\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n\n  return ( \n    <div className={settings.container}>\n     <table className={settings.left}>\n          <tr>\n            <td className={settings.label} id=\"fontFamily\">\n              Font\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"fontFamily_icon\" className={ settings.icon } icon={ faPenNib } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.fontFamily} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"fontFamily\" placeholder=\"Font-Family\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"color\">\n              Color\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"color_icon\" className={ settings.icon } icon={ faFillDrip } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.color} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"color\" placeholder=\"#FFFFFF\" /> <br />\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"border\">\n              Border\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"border_icon\" className={ settings.icon } icon={ faFillDrip } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.border} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"border\" placeholder=\"#FFFFFF\" /> <br />\n            </td>\n          </tr>\n          \n        </table>\n\n\n        <table className={settings.right}>\n          <tr>\n            <td className={settings.label} id=\"fontSize\">\n              Size\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"fontSize_icon\" className={ settings.icon_tiny } icon={ faFont } />\n              <FontAwesomeIcon id=\"size_icon\" className={ settings.icon } icon={ faFont } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.fontSize} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"fontSize\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"backgroundColor\">\n            BG Color\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"backgroundColor_icon\" className={ settings.icon } icon={ faLock } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.backgroundColor} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"backgroundColor\" placeholder=\"password\" /> <br />\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"borderRadius\">\n             Radius\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"borderRadius_icon\" className={ settings.icon } icon={ faFillDrip } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.borderRadius} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"borderRadius\" placeholder=\"#FFFFFF\" /> <br />\n            </td>\n          </tr>\n        </table>\n    </div>\n  )\n}\n\nButton.craft = {\n  props: { \n    color: \"#333\",\n    text: \"Click me\",\n    fontFamily: \"Arial\", \n    backgroundColor: \"#FEFEFE\",\n    borderRadius: \"5px\",\n    border: \"2px solid #eee\"\n  },\n  related: {\n    settings: ButtonSettings\n  }\n}\n\n","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ToolbarLeft.js",["329"],"import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport edit from '../../edit.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faThLarge, faCube, faPlug, faFileImage, faPalette, faSwatchbook, faSlidersH} from '@fortawesome/free-solid-svg-icons'\nimport {Toolbox} from './Toolbox'\n\nconst barOptions = [{name: 'Pages', icon:  faThLarge  }, {name: 'Container', icon: faCube}, {name: 'Plugin', icon: faPlug}, {name: 'Media', icon: faFileImage}, {name: 'Palette', icon: faPalette}, {name: 'Templates', icon: faSwatchbook}, {name: 'Settings', icon: faSlidersH}];\nlet pathname = window.location.pathname.substring(1).slice(5);\nlet current = pathname.charAt(0).toUpperCase() + pathname.slice(1);\n\nexport default function ToolbarLeft(props) {\n\n  const [currentTab, setTab] = useState({current: 'closed'});\n  \n\tuseEffect( () => {\n    if(currentTab.current !== 'closed') {\n      document.getElementById('toolbar_left').style.width = '450px'\n    }\n    else {\n      document.getElementById('toolbar_left').style.width = '73px'\n    }\n  });\n\n\treturn (\n\t\t<div className={edit.toolbar_left}  id='toolbar_left'>\n      <div className={edit.toolbar_left_items}>\n      { barOptions.map( ( label ) => {\n          return( \n            label.name === currentTab.current? \n            <FontAwesomeIcon onClick={() => setTab({'current':'closed'})} className={ edit.toolbar_icon_active } icon={ label.icon } /> :\n            <Link onClick={() => setTab({'current':label.name})}> <FontAwesomeIcon className={ edit.toolbar_icon } icon={ label.icon } /></Link> ) \n        }) }\n      </div>\n      <div className={edit.content}> \n      \t\n        <h1> { currentTab.current } <FontAwesomeIcon onClick={() => setTab({'current':'closed'})} className={edit.icon} icon={faChevronLeft} /> </h1>\n        <div className={edit.body}> \n        {\n      \t\tcurrentTab.current === 'Pages'? <> \n      \t\t\t{props.user.pages.map((page) => {  \n      \t\t\t\tlet pageLink = \"http://localhost:3000/edit/\" + page.id;\n      \t\t\t\treturn <div onClick={() => { window.location = pageLink }} className={edit.page}> { page.name } </div> })\n      \t\t\t} \n      \t\t</> \n\n      \t\t: console.log('')\n     \t\t } \n\n     \t\t {\n     \t\t \tcurrentTab.current === 'Plugin'? \n     \t\t <Toolbox /> : \n     \t\t <>  </>\n     \t\t\t}\n     \t\t </div> \n      </div>\n    </div>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Text.js",["330","331","332","333","334","335"],"import React from \"react\";\nimport ContentEditable from 'react-contenteditable'\nimport { useState, useEffect } from 'react';\nimport edit from '../../edit.module.css';\nimport { useNode, useEditor } from \"@craftjs/core\";\nimport settings from '../../settings.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faTrash, faClone, faPenNib, faFillDrip, faFont, faAlignLeft, faAlignCenter, faAlignRight, faIndent, faOutdent, faListUl, faListOl, faHighlighter, faCode } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Text({text, fontSize, textAlign, color, fontFamily, marginTop, marginLeft}) {\n\n  const { connectors: {connect, drag}, hovered, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n    hovered: state.events.hovered\n  }));\n\n  const { query, actions } = useEditor((state, query) => ({\n    }));\n\n  const { ...collected } = useNode((collector) => {\n    return collector\n  });\n  \n  const duplicate = (e) => {\n    const parent = (collected.data.parent)\n    const node_to_make = {\n      data: collected.data\n    }\n    const node = query.parseFreshNode(node_to_make).toNode();\n    actions.add(node, parent);\n  }\n  const delete_node = () => {\n    actions.delete(collected.id)\n  }\n  const [editable, setEditable] = useState(false);\n  useEffect(() => {!selected && setEditable(false)}, [selected]);\n\n\treturn (\n    <div onClick={e => setEditable(true)} ref={ref => connect(drag(ref))} className={edit.EditableText} style={{marginTop, marginLeft}} >\n    \n    { selected? <div className={edit.textBorder}> \n\n    <div className={edit.options} >  \n      <FontAwesomeIcon onClick={duplicate} className={ edit.icon } icon={ faClone } />\n      <FontAwesomeIcon onClick={delete_node} className={ edit.icon } icon={ faTrash } /> \n    </div>\n\n      <ContentEditable disabled={!editable} html={text} \n        onChange={e => \n          setProp(props => \n            props.text = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n          )\n        } \n        tagName=\"p\"\n        style={{fontSize: `${fontSize}px`, textAlign, color, fontFamily}}/>\n\n         </div> : <p style={{fontSize: `${fontSize}px`, textAlign, color, fontFamily}}>{text}</p>\n\t\t}\n    \n    </div>\n\t)\n}\n\nexport const TextSettings = ({color}) => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [user, setUser] = useState({name: '', email: '', isLoggedIn: false});\n  const [focused, setFocus] = useState({});\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n  const [slider, toggleSlider] = useState();\n\n   useEffect( () => {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n\n  });\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n  const openSlider = (e) => {\n    if(e) {\n       const element = e.target.id.substring(0, e.target.id.length-5) + '_slider'\n       if(document.getElementById(element)) {\n         toggleSlider(element);\n         setTimeout(() => {\n            document.getElementById(element).style.display = 'flex'\n         }, 250);\n       }\n    }\n  }\n  const clearSlider = () => {\n    if(slider) {\n      toggleSlider(null);\n      document.getElementById(slider).style.display = 'none'\n    }\n  }\n\n  return ( \n    <div className={settings.container}>\n     <table className={settings.left}>\n          <tr>\n            <td className={settings.label} id=\"fontFamily\">\n              Font\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"fontFamily_icon\" className={ settings.icon } icon={ faPenNib } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.fontFamily} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"fontFamily\" placeholder=\"Font-Family\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"color\">\n              Color\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"color_icon\" className={ settings.icon } icon={ faFillDrip } />\n              <div className={settings.colorPickerWrapper}> \n                <FontAwesomeIcon style={{ color: props.color }} className={ settings.icon } icon={ faTint } />\n                <input className={ settings.colorPicker } onChange={handleField} value={props.color} onFocus={highLight} onBlur={dehighLight} type=\"color\" name=\"color\" placeholder=\"#FFFFFF\" /> \n              </div>\n            </td>\n            <td>\n\n              <input className={ settings.text } onChange={handleField} value={props.color} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"color\" placeholder=\"#FFFFFF\" /> \n                     \n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"\">\n              Align\n            </td>\n          </tr>\n          <tr>\n            \n            <td className={settings.editButtons}>\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faAlignLeft } />\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faAlignCenter } />\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faAlignRight } />\n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"\">\n              List\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.editButtonsSmall}>\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faListUl } />\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faListOl } />\n            </td>\n          </tr> \n           <tr>\n            <td className={settings.label} id=\"marginTop\">\n              MarginTop\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"marginTop_icon\" className={ settings.icon_tiny } icon={ faFont } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.marginTop} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"marginTop\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n        </table>\n\n        <table className={settings.right}>\n          <tr>\n            <td className={settings.label} id=\"fontSize\">\n              Size\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n            <div id=\"fontSize_slider\" className={settings.fontSlider} onMouseOut={clearSlider} id=\"fontSize_slider\">\n                <div>\n                  <input onChange={handleField} value={props.fontSize} name=\"fontSize\" max=\"200\" min=\"1\" type=\"range\" />\n                </div>\n              </div>\n              <FontAwesomeIcon onMouseOver={openSlider} id=\"fontSize_icon\" className={ settings.icon } icon={ faFont } />\n            </td>\n            <td>\n              <input className={ settings.text } onChange={handleField} value={props.fontSize} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"fontSize\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"password\">\n             Icons\n            </td>\n          </tr>\n          <tr>\n            <td> <br /><br />\n            </td>\n            <td>\n            <br />\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"password\">\n              Indent\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.editButtonsSmall}>\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faIndent } />\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faOutdent } />\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"password\">\n              Style\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.editButtonsSmall}>\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faCode } />\n              <FontAwesomeIcon id=\"password_icon\" className={ settings.iconbutton } icon={ faHighlighter } />\n            </td>\n          </tr>\n          <tr>\n            <td className={settings.label} id=\"marginLeft\">\n              MarginLeft\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"marginLeft_icon\" className={ settings.icon_tiny } icon={ faFont } />\n            </td>\n            <td>\n              <input className={ settings.text } onChange={handleField} value={props.marginLeft} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"marginLeft\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n        </table>\n    </div>\n  )\n}\n\nText.craft = {\n  props: {\n    fontSize: \"16\",\n    fontFamily: 'Helvetica Neue',\n    text: \"Click me\",\n    color: \"#333333\",\n    marginTop: \"0px\", \n    marginLeft: \"0px\"\n  },\n  related: {\n    settings: TextSettings\n  }\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Dashboard.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Inquiries.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Template.js",["336","337","338","339","340"],"import { useState } from 'react';\nimport admin from '../admin.module.css';\nimport axios from 'axios';\nimport lz from \"lzutf8\";\nimport copy from 'copy-to-clipboard';\nimport { useEditor } from \"@craftjs/core\";\n\nexport default function Template(props) {\n\n \tconst [statetoload, sethestatetoload] = useState(null);\n\n \tconst { actions, query, enabled } = useEditor((state) => ({\n    enabled: state.options.enabled\n  }));\n\n\tconst closeprompt = () => {\n   \tconsole.log(props.page);\n   \tconst alert_type = 'alertbox';\n   \talert = document.getElementById(alert_type);\n   \talert.style.display = 'none';\n   }\n\n  const setstatetoload = (e) => {\n    sethestatetoload(e.target.value)\n    console.log(statetoload)\n  }\n\n  \n\t\treturn (\n\t\t<div id=\"alertbox\" style={{display: 'none'}}>\n\t\t\t\t<div className={admin.overlay}>\n\t\t\t\t\t<div className={admin.alertbox}> \n\t\t\t\t\t\t<h1> Load Page </h1>\n\t\t\t\t\t\t<div className={admin.content}> \n\t\t\t\t\t\t\t<p> <input onChange={setstatetoload} type='text' value={statetoload} placeholder=\"Enter the saved data here\" /></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={admin.actionbuttons}> \n\t\t\t\t\t\t\t<button onClick={closeprompt} className={admin.solid}> Cancel </button>\n\t\t\t\t\t\t\t<button onClick={\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t const json = lz.decompress(lz.decodeBase64(statetoload));\n\t\t\t\t\t\t\t\t\t console.log(json)\n\t\t\t\t\t\t\t\t\t actions.deserialize(json);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} className={admin.invert}> Load </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/NavItem.js",["341","342","343","344","345","346"],"import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport edit from '../../edit.module.css';\nimport { useNode } from \"@craftjs/core\";\nimport  Text  from \"./Text\";\n\nimport settings from '../../settings.module.css';\nimport style from '../../styles.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPenNib, faFont, faFillDrip, faLock } from '@fortawesome/free-solid-svg-icons'\n\nexport default function NavItem({text, fontSize, textAlign, color, fontFamily, backgroundColor}) {\n\n  const { connectors: {connect, drag}, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n  }));\n\n  const { ...collected } = useNode((collector) => {\n    return collector\n  });\n  \n  const duplicate = (e) => {\n    console.log(collected);\n  }\n\n\treturn (\n  <>{  selected? \n      <div ref={ref => connect(drag(ref))} className={edit.EditableText}>\n      <div style={{backgroundColor, color}} className={edit.navitem}> \n        <Text fontSize={fontSize} fontFamily={fontFamily} text={text} />\n      \n      </div>\n    </div> : \n    <div ref={ref => connect(drag(ref))} className={edit.EditableText}>\n      <div onClick={duplicate} style={{backgroundColor, color}} className={edit.navitem}> \n        <Text fontSize={fontSize} fontFamily={fontFamily} text={text} />\n      \n      </div>\n    </div>\n    }\n    \n  </>\t)\n}\n\nexport const NavItemSettings = () => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [user, setUser] = useState({name: '', email: '', isLoggedIn: false});\n  const [focused, setFocus] = useState({});\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n\n   useEffect( () => {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n\n  });\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n\n  return ( \n    <div className={settings.container}>\n     <table className={settings.left}>\n          <tr>\n            <td className={settings.label} id=\"fontFamily\">\n              Font\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"fontFamily_icon\" className={ settings.icon } icon={ faPenNib } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.fontFamily} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"fontFamily\" placeholder=\"Font-Family\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"color\">\n              Color\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"color_icon\" className={ settings.icon } icon={ faFillDrip } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.color} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"color\" placeholder=\"#FFFFFF\" /> <br />\n            </td>\n          </tr>\n          \n        </table>\n\n\n        <table className={settings.right}>\n          <tr>\n            <td className={settings.label} id=\"fontSize\">\n              Size\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"fontSize_icon\" className={ settings.icon_tiny } icon={ faFont } />\n              <FontAwesomeIcon id=\"size_icon\" className={ settings.icon } icon={ faFont } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.fontSize} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"fontSize\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"backgroundColor\">\n            BG Color\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <FontAwesomeIcon id=\"backgroundColor_icon\" className={ settings.icon } icon={ faLock } />\n            </td>\n            <td>\n              <input className={ settings.text }  onChange={handleField} value={props.backgroundColor} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"backgroundColor\" placeholder=\"password\" /> <br />\n            </td>\n          </tr>\n          \n        </table>\n    </div>\n  )\n}\n\nNavItem.craft = {\n  props: { \n    fontSize: \"12\",\n    fontFamily: 'comic sans ms',\n    text: \"Click me\",\n    color: \"#333333\",\n    backgroundColor: \"#fefefe\",\n  },\n  related: {\n    settings: NavItemSettings\n  }\n\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Settings.js",["347","348","349","350","351","352","353","354","355","356","357","358","359"],"import { useEffect, useState } from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\nimport admin from '../admin.module.css'\nimport  Toolbar  from '../components/Toolbar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserAstronaut, faChevronDown, faLock, faUser, faLayerGroup, faUserTag, faAt } from '@fortawesome/free-solid-svg-icons'\nimport FocusHandler from '../modules/FocusHandler'\nimport axios from 'axios'\nimport ProfileSettings from '../components/settings/ProfileSettings'\n\nexport default function Settings(props) {\n\tconst [tab, setTab] = useState();\n  useEffect(() => {\n    setTab(<ProfileSettings user={props.user} />)\n  }, []);\n\treturn (\n\t\t<div className={admin.container}>\n\t\t<Toolbar tab={tab} user={props.user} setTab={setTab} type='settings' />\n  \t\t<div className={admin.settingscontainer}>\n          { tab }\n  \t\t</div>\n\t\t</div>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Image.js",["360","361","362","363","364","365","366","367","368","369","370","371","372"],"import React  from \"react\";\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport edit from '../../edit.module.css';\nimport { useNode, useEditor } from \"@craftjs/core\";\nimport settings from '../../settings.module.css';\nimport SettingsPanelExtension from './SettingsPanelExtension'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClone, faTrash, faFileUpload, faLongArrowAltRight, faLongArrowAltDown, faLink, faArrowsAltH, faArrowsAltV } from '@fortawesome/free-solid-svg-icons'\nimport  Resizer  from '../../components/Resizer'\n\nexport default function Image({height, width, src, marginLeft, marginTop}) {\n\n   \n  const { connectors: {connect, drag}, hovered, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n    hovered: state.events.hovered\n  }));\n  const { query, actions } = useEditor((state, query) => ({\n    }));\n\n  const { ...collected } = useNode((collector) => {\n    return collector\n  });\n  const delete_node = () => {\n    actions.delete(collected.id)\n  }\n  const duplicate = (e) => {\n    const parent = (collected.data.parent)\n    const node_to_make = {\n      data: collected.data\n    }\n    const node = query.parseFreshNode(node_to_make).toNode();\n    actions.add(node, parent);\n  }\n\treturn (\n    <div ref={ref => connect(drag(ref))} className={edit.EditableText} style={{marginLeft, marginTop}}>\n    \n    { selected? <div className={edit.textBorder}> \n    <div className={edit.options} >  \n      <FontAwesomeIcon onClick={duplicate} className={ edit.icon } icon={ faClone } />\n      <FontAwesomeIcon onClick={delete_node} className={ edit.icon } icon={ faTrash } /> \n    </div>\n      <img src={src} style={{height: `${height}px`, width: `${width}px`}} />\n\n         </div> : <img src={src} style={{height: `${height}px`, width: `${width}px`}} />\n\t\t}\n    \n    </div>\n\t)\n}\nexport const ImageResizer = ({height, width}) => {\n  const { actions: { setProp }, props } = useNode((node) => ({\n    props: node.data.props,\n  }));\n  return (\n    <Resizer change={(e) => setProp(props => { props['width'] = e.width; props['height'] = e.height })} height={props.height} width={props.width} />\n  )\n}\nexport const ImageSettings = ({ src }) => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [extension, toggleExtenion] = useState(false);\n  const [focused, setFocus] = useState({});\n  const [slider, toggleSlider] = useState();\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n\n   useEffect( () => {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          let element_px = document.getElementById(i + '_px');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n          element_px.style.color = \"#fefefe\";\n          element_px.style.fontWeight = \"bold\";\n          element_px.style.background = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element_px = document.getElementById(i + '_px');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_px.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n          element_px.style.background = \"transparent\";\n          element_px.style.color = \"#989898\";\n        }\n      }\n    )\n\n  });\n  const openSlider = (e) => {\n    if(e) {\n       const element = e.target.id.substring(0, e.target.id.length-5) + '_slider'\n       if(document.getElementById(element)) {\n         toggleSlider(element);\n         setTimeout(() => {\n            document.getElementById(element).style.display = 'flex'\n         }, 250);\n       }\n    }\n  }\n  const clearSlider = () => {\n    if(slider) {\n      toggleSlider(null);\n      document.getElementById(slider).style.display = 'none'\n    }\n  }\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n\n  return ( \n    <div >\n    <table className={settings.sourcetable}>\n     <tr>\n        <td className={settings.label}>\n          Source:\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <SettingsPanelExtension toggle={ e => toggleExtenion(false) } extension={extension} />\n          <button style={{background: \"url(\" + props.src +  \")\", backgroundSize: \"cover\"}} onClick={ e => toggleExtenion(true) } value={props.src} type=\"text\" className=\"settings.sourcebutton\"  /> \n        </td>\n      </tr> \n    </table>\n    <div className={settings.container} >\n     <table className={settings.left_even}>\n          <tr>\n            <td className={settings.label} id=\"width\">\n              Width\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <div className={settings.widthSlider} onMouseOut={clearSlider} id=\"width_slider\">\n                <div>\n                  <input onChange={handleField} value={props.width} name=\"width\" max=\"1000\" min=\"1\" type=\"range\" />\n                </div>\n              </div>\n              <FontAwesomeIcon onMouseOver={ openSlider } id=\"width_icon\" className={ settings.icon } icon={ faArrowsAltH } />\n              <div id=\"width_px\" className={settings.px}>  PX </div>\n            </td>\n            <td>\n              <input onChange={handleField} value={props.width} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"width\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"marginLeft\">\n              MarginLeft\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"marginLeft_icon\" className={ settings.icon } icon={ faLongArrowAltRight } />\n              <div id=\"marginLeft_px\" className={settings.px}>  PX </div>\n            </td>\n            <td>\n              <input onChange={handleField} value={props.marginLeft} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"marginLeft\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          \n        </table>\n\n        <table className={settings.right_even}>\n          <tr>\n            <td className={settings.label} id=\"height\">\n              Height\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <div id=\"height_slider\" className={settings.heightSlider} onMouseOut={clearSlider} id=\"height_slider\">\n                <div>\n                  <input onChange={handleField} value={props.height} name=\"height\" max=\"1000\" min=\"1\" type=\"range\" />\n                </div>\n              </div>\n              <FontAwesomeIcon onMouseOver={ openSlider } id=\"height_icon\" className={ settings.icon } icon={ faArrowsAltV } />\n              <div id=\"height_px\" className={settings.px}>  PX </div>\n            </td>\n            <td>\n              <input onChange={handleField} value={props.height} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"height\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"marginTop\">\n              MarginTop\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"marginTop_icon\" className={ settings.icon } icon={ faLongArrowAltDown } />\n            </td>\n            <td>\n              <input onChange={handleField} value={props.marginTop} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"marginTop\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n        </table>\n      </div>\n    </div>\n  )\n}\nexport const ImageSettingsExtension = ({ src }) => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [user, setUser] = useState({name: '', email: '', isLoggedIn: false});\n  const [focused, setFocus] = useState({});\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n\n   useEffect( () => {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n\n  });\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n\n  return ( \n    <div >\n    <table className={settings.sourcetable}>\n      <tr>\n        <td className={settings.label}>\n          Upload:\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <label>\n            <div>\n              <FontAwesomeIcon className={ settings.fileicon } icon={ faFileUpload } />\n              <input type=\"file\" placeh className=\"settings.sourcefile\"  /> \n            </div>\n          </label>\n        </td>\n      </tr> \n    </table>\n    <br />\n      <table className={settings.sourcetable}>\n      <tr>\n        <td className={settings.label} id=\"src\">\n          URL:\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <FontAwesomeIcon id=\"src_icon\" className={ settings.icon } icon={ faLink } />\n        </td>\n        <td>\n          <input className={settings.text} onChange={handleField} value={props.src} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"src\" placeholder=\"URL of image\" /> \n        </td>\n      </tr> \n    </table>\n    </div>\n  )\n}\nImage.craft = {\n  props: { \n    height: \"250\",\n    width: \"250\",\n    marginLeft: \"0px\", \n    marginTop: \"0px\",\n    settingsExtension: ImageSettingsExtension,\n    settingsExtensionName: 'Image Source',\n    src: \"https://res.cloudinary.com/css-tricks/image/fetch/w_600,q_auto,f_auto/https://cdn4.buysellads.net/uu/7/78180/1608680187-MCSmart_Engage_Custom_Feature_SmartRecs_GetStarted_1x1-_1_.jpg\"\n  },\n  related: {\n    settings: ImageSettings,\n  }\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/index.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/NoAccess.js",["373"],"import { Link } from \"react-router-dom\"; \nimport error from '../error.module.css';\n\nexport default function NoAccess(props) {\n\n  return (\n    <div className={error.accesscontainer}> \n        <h1> Ummm.... </h1>\n        <img src='./frog.png' />\n        <h2> Well this is weird. <br /> It looks like you aren't allowed to access the page you were looking for. </h2>\n        <h3> Go back to <Link to='/login'> theportfoliobuilder.com </Link> or contact us about a problem. </h3>\n      \n    </div>\n  )\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/Login.js",["374","375","376","377","378"],"import { React, useState, useEffect } from \"react\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport axios from 'axios'\nimport login from './login.module.css';\nimport style from './styles.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAt, faLock } from '@fortawesome/free-solid-svg-icons'\n\nfunction Login() { \n\n  const [user, setUser] = useState({name: '', email: '', isLoggedIn: false});\n  const [focused, setFocus] = useState({email:false, password:false});\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n  useEffect( () => {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n  });\n\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n    // fetch('http://localhost:3001/users').then(response => response.json()).then(data => console.log(data));\n    let data = user;\n    axios.post('http://localhost:3001/login', data).then( (response) => { \n      localStorage.setItem(\"token\", response.data.jwt);console.log(response.data.jwt); if(response.status == 200) { window.location = 'http://localhost:3000/dashboard' } }).catch((error) => { \n        console.log(error.response) \n      });\n  }\n\n  return (\n    <div className={style.wrapper}>\n      <div className={login.left}>\n          <h2> Login to access your </h2>\n          <h1> Account </h1>\n            <table>\n              <tr>\n                <td className={login.label} id=\"email\">\n                  Email\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"email_icon\" className={ login.icon } icon={ faAt } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.email} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"email\" placeholder=\"email address\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={login.label} id=\"password\">\n                  Password\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"password_icon\" className={ login.icon } icon={ faLock } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.password} onFocus={highLight} onBlur={dehighLight} type=\"password\" name=\"password\" placeholder=\"password\" /> <br />\n                </td>\n              </tr>\n            </table>\n            <button onClick={HandleSubmit}> Continue </button> \n            <h3> Not yet registered? <Link to =\"/signup\" > Sign up </Link> </h3>\n      </div>\n      <div className={login.right}>\n        <h1> Create. Build. Edit. </h1>\n        <img src='./computer.png' />'\n        <h2> ALL-IN-ONE </h2>\n        <h3> Composable Cloud Portfolio </h3>\n        <h4> An online portfolio manager with a drag and drop page builder that gives you the freedom to easily manage your online portfolio to grow your as your experience does. </h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/index.js",["379","380","381","382","383","384"],"import { Dashboard } from './Dashboard.js'\nimport { Analytics } from './Analytics.js'\nimport { Pages } from './Pages.js'\nimport { Edit } from './Edit.js'\nimport { Inquiries } from './Inquiries.js'\nimport { Settings } from './Settings.js'\n\nexport { default as Dashboard}  from './Dashboard.js'\nexport { default as Analytics}  from './Analytics.js'\nexport { default as Pages}  from './Pages.js'\nexport { default as Edit}  from './Edit.js'\nexport { default as Inquiries}  from './Inquiries.js'\nexport { default as Settings}  from './Settings.js'\n","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Content.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Pages.js",["385","386"],"import { gql, useQuery } from \"@apollo/client\";\nimport admin from '../admin.module.css';\nimport { useState } from 'react';\nimport  Toolbar  from '../components/Toolbar'\nimport  Alert  from '../components/Alert'\nimport  AddPage  from '../components/AddPage'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst PAGES = gql`\n    query UsersPages($id: ID) {\n      userspages(id:$id) {\n        id\n        name\n      }\n    }`;\n\nexport default function Pages(props) {\n  const [page, setPage] = useState({page_type: '', page_kind: '', page_layout: '', name: '', id: ''});\n\n  const {loading, error, data, refetch} = useQuery(PAGES, {\n    variables: { id: props.user.id }\n  });\n  if (loading) return <> loading... Please wait. </>;\n  if (error) return <p> error... </p>;\n\n  const edit = (e) => {\n    window.location = 'http://localhost:3000/edit/' + e;\n  }\n   const deleteprompt = (item) => {\n    document.getElementById(\"alertbox\").style.display = 'block';\n    setPage(prevState => ({ ...prevState, ['id']:item.id }));\n    setPage(prevState => ({ ...prevState, ['name']:item.name }));\n   }\n   \n  return (\n    <div className={admin.container}>\n      <Toolbar />\n      <div className={admin.pageContainer}>\n        {data.userspages.map((page) => {\n        return <div className={admin.page} key={page.name}> <div className={admin.label}> {page.name} </div> \n          <div className={admin.pagebuttons}> \n            <div onClick={( () => { deleteprompt(page) } )} className={admin.trash}> <FontAwesomeIcon className={ admin.icon } icon={ faTrash } /> </div>   \n            <div onClick={( () => { edit(page.id) } )} className={admin.edit}> <FontAwesomeIcon className={ admin.icon } icon={ faPencilAlt } /> </div>  \n            </div>\n          </div>\n        })} \n      </div>\n\n      <Alert type=\"delete\" refetch={ () => refetch()} page={page} />\n\n      <AddPage type=\"delete\" refetch={ () => refetch()} page={page} />\n\n    </div>\n  )\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/ErrorPage.js",["387"],"import { Link } from \"react-router-dom\"; \nimport error from '../error.module.css';\n\nexport default function ErrorPage(props) {\n\n  return (\n    <div className={error.container}> \n        <h1> Boo... </h1>\n        <img src='./ghost.png' />'\n        <h2> Sorry about that! <br /> It looks like the page you were looking for does not exist. </h2>\n        <h3> Go back to <Link to='/login'> theportfoliobuilder.com </Link> or contact us about a problem. </h3>\n      \n    </div>\n  )\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Avatar.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/SettingsPanel.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/Analytics.js",[],["388","389"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Toolbar.js",["390","391"],"import style from '../styles.module.css';\nimport admin from '../admin.module.css';\nimport {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisH, faPlus, faIdCard, faBell, faAt, faPowerOff } from '@fortawesome/free-solid-svg-icons'\nimport  AddPage  from './AddPage'\nimport  ProfileSettings  from './settings/ProfileSettings'\nimport  NotificationSettings  from './settings/NotificationSettings'\nimport  AdvancedSettings from './settings/AdvancedSettings'\n\nexport default function Toolbar(props) {\n\tconst [current, setTab] = useState('Profile');\t\n\tconst tabdata = [{name: \"Profile\", onclick:<ProfileSettings name='profile' user={props.user} />, icon: faIdCard}, {name: \"Notifications and Privacy\", onclick:<NotificationSettings name='notification' user={props.user} />, icon: faBell}, {name: \"Advanced\", onclick:<AdvancedSettings name='advanced' user={props.user} />, icon: faPowerOff}]\n\t const addPrompt = (item) => {\n    document.getElementById(\"addBox\").style.display = 'block';\n   }\n   if(props.type) {\n   \tif(props.type == 'settings') {\n\n   \t}\n   }\n\treturn (\n\t\t<div className={admin.Toolbar}>\n\t\t{props.type? <>\n\t\t\t<h1> Account Settings </h1>\n\n\t\t\t{tabdata.map((tab) => {\n\t\t\t\treturn <>\n\t\t\t\t{tab.name === current? \n\t\t\t\t<button onClick={() => {props.setTab( tab.onclick ); setTab(tab.name)}} className={admin.tabbutton}> \n\t\t\t\t  <FontAwesomeIcon name=\"type\" id=\"type_icon\" className={ admin.iconleft } icon={ tab.icon } />\n\t\t\t    <span name=\"type\"> {tab.name} </span>\n\t\t\t  </button> :\n\t\t\t  <button onClick={() => {props.setTab( tab.onclick ); setTab(tab.name)}} className={admin.tabbutton_inactive}> \n\t\t\t\t  <FontAwesomeIcon name=\"type\" id=\"type_icon\" className={ admin.iconleft } icon={ tab.icon } />\n\t\t\t    <span name=\"type\"> {tab.name} </span>\n\t\t\t  </button> \n\t\t\t\t\t}\n\t\t\t   </>\n\t\t\t})}\n\n\t\t\t<button className={admin.add}> <FontAwesomeIcon className={ style.icon } icon={ faEllipsisH } /> </button>\n\t\t\t</>\n\t\t\t: <> <h1> My Pages </h1>\n\t\t\t<button onClick={addPrompt} className={admin.addbutton}> \n\t    <span name=\"type\"> Create Page </span>\n\t  <FontAwesomeIcon name=\"type\" id=\"type_icon\" className={ admin.addiconright } icon={ faPlus } />\n\t  </button>\n\t\t<button className={admin.add}> <FontAwesomeIcon className={ style.icon } icon={ faEllipsisH } /> </button>\n\n\t  <AddPage type=\"add\"  /> </>\n\t\t}\n\t\t\n\n\t\t</div>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/User.js",[],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Sidebar.js",["392"],"import style from '../styles.module.css';\nimport { useState } from 'react';\nimport Avatar from './Avatar'\nimport BarLabels from './BarLabels'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Sidebar(props) {\n\tconst logout = () => {\n\t\tlocalStorage.removeItem('token');\n\t\twindow.location = 'http://localhost:3000';\n\t}\n\t\n\treturn (\n\t\t<div className={style.SideBar}>\n\t\t\t<Avatar user={props.user} />\n\t\t\t<BarLabels tab={ props.tab } />\n\t\t\t<button onClick={logout} className={style.logout}> Logout <FontAwesomeIcon icon={faSignOutAlt} /> </button>\n\t\t</div>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/EditFrame.js",["393","394","395"],"import edit from '../edit.module.css';\nimport { useState, useEffect, React } from 'react';\nimport  ToolbarLeft  from '../components/edit/ToolbarLeft'\nimport  ToolbarBottom  from '../components/edit/ToolbarBottom'\nimport  MainWrapper  from '../components/edit/MainWrapper'\nimport  BodyWrapper  from '../components/edit/BodyWrapper'\nimport  SettingsPanel  from '../components/edit/SettingsPanel'\nimport { useEditor, Frame } from \"@craftjs/core\";\nimport  Template  from '../components/Template'\nimport  ToolWrapper  from '../components/edit/ToolWrapper'\nimport lz from \"lzutf8\";\n\n\nexport default function EditFrame(props) {\n\n  const [active, setActive] = useState(true);\n\n  const { query, actions, selectedNodeId, selectedNode } = useEditor((state, query) => ({\n    selectedNodeId: state.events.selected,\n  }));\n\n  const nodeTree = query.parseReactElement(<ToolWrapper ><Template type=\"load\" /><ToolbarLeft id=\"toolbar_left\" user={props.page.owner} /><ToolbarBottom page={props.page} setActive={ () => setActive(prev => !prev)} active={active}  /><SettingsPanel /></ToolWrapper >).toNodeTree();\n\n  useEffect( () => {\n\n  if(document.getElementById('toolbar_left')) {\n    if (active) {\n     document.getElementById('toolbar_left').style.display = 'flex'\n    }\n    else {\n      document.getElementById('toolbar_left').style.display = 'none'\n    }\n  } \n    //lz.decompress(lz.decodeBase64(props.page.page_layout)).substr( 0, ( lz.decompress(lz.decodeBase64(props.page.page_layout)).length - 1) + \"}\" )     \n  });\n  useEffect(() => {\n    \n    actions.addNodeTree(nodeTree, \"ROOT\");\n\n  },[]);\n  return (\n    <div id=\"\" className={edit.maincontainer}> \n      {  props.page.page_layout? \n      <Frame id=\"frame\" data={ lz.decompress(lz.decodeBase64(props.page.page_layout) )}>\n      <MainWrapper>\n            <BodyWrapper>\n            </BodyWrapper>\n           </MainWrapper>\n        </Frame> :  \n        <Frame>\n          <MainWrapper>\n            <BodyWrapper>\n            </BodyWrapper>\n           </MainWrapper>\n        </Frame>\n      }\n    </div>\n  ) \n    \n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ToolWrapper.js",["396"],"import edit from '../../edit.module.css';\n\nexport default function ToolWrapper({children}) {\n  return (\n    \t<div>\n      \t{children}\n      </div>\n  )\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/AddPage.js",["397","398","399","400","401"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/SnackBarNotification.js",["402","403"],"import { useState } from 'react';\nimport admin from '../admin.module.css';\nimport axios from 'axios';\n\nexport default function SnackBarNotification(props) {\n   \treturn (\n\t\t<div id=\"SnackBarNotification\" style={{\"-webkit-transition\": \"all .5s ease-in-out\", \"opacity\": 0, top: \"-50px\"}}>\n\t\t\t\t<div style={{\"z-index\": 5}}>\n\t\t\t\t\t<div className={admin.SnackBarNotification} > \n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className={admin.content}> \n\t\t\t\t\t\t\t<p> Your page has been saved.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n   \n\t}\n",["404","405"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/SettingsPanelExtension.js",["406","407"],"import React from 'react';\nimport edit from '../../edit.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { useEditor, useNode } from \"@craftjs/core\";\n\nexport default function SettingsPanelExtension(props) {\n  const setNull = () => {\n    actions.selectNode(null)\n  }\n  const { ...collected } = useNode((collector) => {\n    return collector\n  });\n  \n  const { actions, selected } = useEditor((state, query) => {\n    const currentNodeId = state.events.selected;\n     let selected;\n      if ( currentNodeId ) {\n        selected = {\n          id: currentNodeId,\n          name: state.nodes[currentNodeId].data.name,\n          settings: state.nodes[currentNodeId].related && state.nodes[currentNodeId].related.settings, \n           isDeletable: query.node(currentNodeId).isDeletable()\n        };\n      }\n      return {\n        selected\n      }\n  });\n\n\treturn props.extension? ( \n\n\t\t<div id=\"SettingsPanelExtension\" className={edit.SettingsPanelExtension}>\n     <div className={edit.header}> \n     \t<h1 className={edit.title}>  {collected.data.props.settingsExtensionName} </h1> <FontAwesomeIcon onClick={props.toggle} className={edit.x} icon={faTimes} />\n     </div>\n     <div className={edit.body}> \n     { collected.data.props.settingsExtension && React.createElement(collected.data.props.settingsExtension) }\n     </div>\n    </div>  \n\t) : null\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/ColumnContainer.js",["408","409","410","411","412"],"import edit from '../../edit.module.css';\nimport { Element, useNode, useEditor } from '@craftjs/core';\nimport { useState, useEffect } from 'react';\nimport Column from './Column'\nimport { faPlus, faTrash, faClone } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function ColumnContainer({background, children, padding = 0}) {\n\n  const { connectors: {connect, drag}, hovered, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n    hovered: state.events.hovered\n  }));\n\n  const { query, actions } = useEditor((state, query) => ({\n    }));\n\n  const { ...collected } = useNode((collector) => {\n    return collector\n  });\n\n  const addCol = (e) => {\n    const parent = (collected.data.linkedNodes.ColContainer)\n    const first = query.node(collected.data.linkedNodes.ColContainer).get()\n    const node_to_make = {\n      data: query.node(first.data.nodes[0]).get().data\n    }\n\n    const node = query.parseFreshNode(node_to_make).toNode();\n    console.log(node)\n    node.data.nodes = null;\n    actions.add(node, parent);\n  }\n  const duplicate = (e) => {\n    const parent = (collected.data.parent)\n    const node_to_make = {\n      data: collected.data\n    }\n    const node = query.parseFreshNode(node_to_make).toNode();\n    actions.add(node, parent);\n  }\n  const delete_node = () => {\n    actions.delete(collected.id)\n  }\n\n  return (\n    <div className={edit.columnWrapper} ref={ref => connect(drag(ref))} >\n     {selected? <div> \n\n      <div className={edit.columnsContainerOptions} >  \n        <FontAwesomeIcon onClick={addCol} className={ edit.icon } icon={ faPlus } />\n        <FontAwesomeIcon onClick={duplicate} className={ edit.icon } icon={ faClone } />\n        <FontAwesomeIcon onClick={delete_node} className={ edit.icon } icon={ faTrash } /> \n      </div>\n      <Element className={edit.columnContainer} id=\"ColContainer\" canvas>\n          <Element is={Column} id=\"Col1\" canvas />\n      </Element>\n       </div> : \n      <Element className={edit.columnContainer} id=\"ColContainer\" canvas>\n          <Element is={Column} id=\"Col1\" canvas />\n      </Element>\n\n      }\n    </div>\n  )\n}\n\nColumnContainer.craft = {\n  props: { \n    src: \"https://wallpaperaccess.com/full/340597.jpg\",\n    height: \"800px\",\n    width: \"100vw\"\n  },\n  related: {\n  },\n  displayName: \"Column Container\"\n\n}",["413","414"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/edit/Column.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"import edit from '../../edit.module.css';\nimport { useNode, useEditor } from '@craftjs/core';\nimport { useState, useEffect } from 'react';\nimport { faTrash, faFileUpload, faLongArrowAltRight, faLongArrowAltDown, faLink, faArrowsAltH, faArrowsAltV } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport settings from '../../settings.module.css';\nimport SettingsPanelExtension from './SettingsPanelExtension'\nimport FocusHandler from '../../modules/FocusHandler'\nimport  Resizer  from '../../components/Resizer'\n\nexport default function Column({children, padding, height, width}) {\n\n  const { connectors: {connect, drag}, hovered, selected, dragged, actions: {setProp} } = useNode((state) => ({\n    selected: state.events.selected,\n    dragged: state.events.dragged,\n    hovered: state.events.hovered\n  }));\n\n  const { query, actions, enabled } = useEditor((state, query) => ({\n      enabled: state.options.enabled\n    }));\n\n  const { ...collected } = useNode((collector) => {\n    return collector\n  });\n  const duplicate = (e) => {\n    const parent = (collected.data.parent)\n    const node_to_make = {\n      data: collected.data\n    }\n    const node = query.parseFreshNode(node_to_make).toNode();\n    actions.add(node, parent);\n  }\n\n  const delete_node = () => {\n    actions.delete(collected.id)\n  }\n  const [draggable, setDraggable] = useState(true);\n  const [editable, setEditable] = useState(false);\n  useEffect(() => {!selected && setEditable(false)}, [selected]);\n\n  return ( \n\n    <div style={{height: `${height}px`, width: `${width}px`}} className={edit.columnDroppable} ref={ref => connect(drag(ref))} >\n    {selected? \n      <div className={edit.columnBorder}>  \n        <div className={edit.columnOptions} >  \n          {/*   <FontAwesomeIcon onClick={duplicate} className={ edit.icon } icon={ faPlus } />\n          <FontAwesomeIcon onClick={duplicate} className={ edit.icon } icon={ faClone } /> --> */}\n          <FontAwesomeIcon onClick={delete_node} className={ edit.icon } icon={ faTrash } /> \n        </div>\n      <div className={edit.columnContent}>\n       {children} \n      </div>\n       </div> : \n      <div className={edit.columnContent}> {children}</div>\n      \n    }\n    </div>\n  )\n}\nexport const ColumnResizer = ({height, width}) => {\n  const { actions: { setProp }, props } = useNode((node) => ({\n    props: node.data.props,\n  }));\n  return (\n    <Resizer change={(e) => setProp(props => { props['width'] = e.width; props['height'] = e.height })} height={props.height} width={props.width} />\n  )\n}\nexport const ColumnSettings = ({ src }) => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [extension, toggleExtenion] = useState(false);\n  const [focused, setFocus] = useState({});\n  const [slider, toggleSlider] = useState();\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n\n  useEffect( () => {\n    FocusHandler(focused)\n  });\n\n  const openSlider = (e) => {\n    if(e) {\n       const element = e.target.id.substring(0, e.target.id.length-5) + '_slider'\n       if(document.getElementById(element)) {\n         toggleSlider(element);\n         setTimeout(() => {\n            document.getElementById(element).style.display = 'flex'\n         }, 250);\n       }\n    }\n  }\n  const clearSlider = () => {\n    if(slider) {\n      toggleSlider(null);\n      document.getElementById(slider).style.display = 'none'\n    }\n  }\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n\n  return ( \n    <div >\n    <table className={settings.sourcetable}>\n     <tr>\n        <td className={settings.label}>\n         Background\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <SettingsPanelExtension toggle={ e => toggleExtenion(false) } extension={extension} />\n          <button style={{border: \"1px solid #cecece\", background: \"#eee\", backgroundSize: \"cover\"}} onClick={ e => toggleExtenion(true) } value={props.src} type=\"text\" className=\"settings.sourcebutton\">\n            <FontAwesomeIcon className={ settings.icon } icon={ faFileUpload } />\n          </button> \n        </td>\n      </tr>  \n      <br />\n      <tr>\n        <td className={settings.label}>\n          Content Alignment\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <SettingsPanelExtension toggle={ e => toggleExtenion(false) } extension={extension} />\n          <button style={{border: \"1px solid #cecece\", background: \"url('https://arrontaylor.me/img/alignment_small.png')\", backgroundSize: \"cover\"}} onClick={ e => toggleExtenion(true) } value={props.src} type=\"text\" className=\"settings.sourcebutton\"  /> \n        </td>\n      </tr> \n    </table>\n    <div className={settings.container} >\n     <table className={settings.left_even}>\n          <tr>\n            <td className={settings.label} id=\"width\">\n              Width\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <div className={settings.widthSlider} onMouseOut={clearSlider} id=\"width_slider\">\n                <div>\n                  <input onChange={handleField} value={props.width} name=\"width\" max=\"1000\" min=\"1\" type=\"range\" />\n                </div>\n              </div>\n              <FontAwesomeIcon onMouseOver={ openSlider } id=\"width_icon\" className={ settings.icon } icon={ faArrowsAltH } />\n              <div id=\"width_px\" className={settings.px}>  PX </div>\n            </td>\n            <td>\n              <input onChange={handleField} value={props.width} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"width\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"marginLeft\">\n              MarginLeft\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"marginLeft_icon\" className={ settings.icon } icon={ faLongArrowAltRight } />\n              <div id=\"marginLeft_px\" className={settings.px}>  PX </div>\n            </td>\n            <td>\n              <input onChange={handleField} value={props.marginLeft} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"marginLeft\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          \n        </table>\n\n        <table className={settings.right_even}>\n          <tr>\n            <td className={settings.label} id=\"height\">\n              Height\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <div id=\"height_slider\" className={settings.heightSlider} onMouseOut={clearSlider} id=\"height_slider\">\n                <div>\n                  <input onChange={handleField} value={props.height} name=\"height\" max=\"1000\" min=\"1\" type=\"range\" />\n                </div>\n              </div>\n              <FontAwesomeIcon onMouseOver={ openSlider } id=\"height_icon\" className={ settings.icon } icon={ faArrowsAltV } />\n              <div id=\"height_px\" className={settings.px}>  PX </div>\n            </td>\n            <td>\n              <input onChange={handleField} value={props.height} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"height\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n          <tr>\n            <td className={settings.label} id=\"marginTop\">\n              MarginTop\n            </td>\n          </tr>\n          <tr>\n            <td style={{display: \"flex\", height: \"51px\",\"align-items\": \"center\"}}>\n              <FontAwesomeIcon id=\"marginTop_icon\" className={ settings.icon } icon={ faLongArrowAltDown } />\n            </td>\n            <td>\n              <input onChange={handleField} value={props.marginTop} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"marginTop\" placeholder=\"12px\" /> \n            </td>\n          </tr> \n        </table>\n      </div>\n    </div>\n  )\n}\nexport const ImageSettingsExtension = ({ src }) => {\n  const {\n    actions: { setProp },\n    props,\n  } = useNode((node) => ({\n    props: node.data.props,\n  }));\n\n  const [user, setUser] = useState({name: '', email: '', isLoggedIn: false});\n  const [focused, setFocus] = useState({});\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n    setProp(props => { \n      props[name] = e.target.value.replace(/<\\/?[^>]+(>|$)/g, \"\")  \n    });\n  }\n\n   useEffect( () => {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n\n  });\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value)\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n\n  return ( \n    <div >\n    <table className={settings.sourcetable}>\n      <tr>\n        <td className={settings.label}>\n          Upload:\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <label>\n            <div>\n              <FontAwesomeIcon className={ settings.fileicon } icon={ faFileUpload } />\n              <input type=\"file\" placeh className=\"settings.sourcefile\"  /> \n            </div>\n          </label>\n        </td>\n      </tr> \n    </table>\n    <br />\n      <table className={settings.sourcetable}>\n      <tr>\n        <td className={settings.label} id=\"src\">\n          URL:\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <FontAwesomeIcon id=\"src_icon\" className={ settings.icon } icon={ faLink } />\n        </td>\n        <td>\n          <input className={settings.text} onChange={handleField} value={props.src} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"src\" placeholder=\"URL of image\" /> \n        </td>\n      </tr> \n    </table>\n    </div>\n  )\n}\nColumn.craft = {\n  custom: {\n    blah: 'blah'\n  },\n  props: { \n    height: \"100\",\n    width: \"100\",\n    marginLeft: \"0px\", \n    marginTop: \"0px\",\n    settingsExtension: ImageSettingsExtension,\n    settingsExtensionName: 'Image Source',\n    src: \"https://res.cloudinary.com/css-tricks/image/fetch/w_600,q_auto,f_auto/https://cdn4.buysellads.net/uu/7/78180/1608680187-MCSmart_Engage_Custom_Feature_SmartRecs_GetStarted_1x1-_1_.jpg\"\n  },\n  related: {\n    settings: ColumnSettings,\n  }\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/modules/FocusHandler.js",["429"],"export default function FocusHandler(focused) { \n  if(focused) {\n    Object.keys(focused).map(\n      (i, key) => {\n        if(focused[i] === true) {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#7165E3\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#7165E3\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n  }\n}\n","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/Step3.js",["430","431","432","433","434","435","436","437","438","439","440","441"],"import { React, useState, useEffect } from \"react\";\n\nimport axios from 'axios'\nimport signup from '../../signup.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserAstronaut, faChevronDown, faUserSecret, faAt, faLock, faUser, faLayerGroup } from '@fortawesome/free-solid-svg-icons'\nimport FocusHandler from '../../modules/FocusHandler'\n\n\nexport default function Step3(props) {\n\n  const [user, setUser] = useState({name: props.user.name, email: props.user.email, password: props.user.password, avatar: './pug.png'});\n  const [focused, setFocus] = useState({password:false});\n  useEffect( () => {\n    FocusHandler(focused);\n  });\n  const handleField = (e) => {\n      const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n   //   (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1)\n      setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const handleClick = (e) => {\n      document.getElementById('avatardropdownmenu').style.display = 'none';\n      document.getElementById('dropdownbutton').style.background = \"#fff\"\n      document.getElementById('dropdownbutton').style.color = \"#989898\"\n      document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n      document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n      const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n   //   (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1)\n      setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const highLight = (e) => {\n   \n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    \n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n  const toggledropdown = () => {\n    if(document.getElementById('avatardropdownmenu').style.display === 'none') {\n      document.getElementById('avatardropdownmenu').style.display = 'flex';\n      document.getElementById('dropdownbutton').style.background = \"#EFEFEF\"\n      document.getElementById('dropdownbutton').style.color = \"#7165E3\"\n      document.getElementById('dropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n      document.getElementById('dropdownbutton').style.border = \"1px solid #CCC\"\n    }\n    else {\n      document.getElementById('avatardropdownmenu').style.display = 'none';\n      document.getElementById('dropdownbutton').style.background = \"#fff\"\n      document.getElementById('dropdownbutton').style.color = \"#989898\"\n      document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n      document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n    }\n  }\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n  //  fetch('http://localhost:3001/users').then(response => response.json()).then(data => console.log(data));\n    let data = user;\n    data.avatar = (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1);\n    data.usertype = user.type;\n    console.log(user.type)\n    axios.post('http://localhost:3001/users', data).then((response) => { console.log(response);localStorage.setItem(\"token\", response.data.jwt); if(response.status == 200) { window.location = 'http://localhost:3000/' } }).catch(error => { console.log(error.response) });\n  }\n  return(\n    <>\n    <div className={signup.headercontainer}> \n    <div>\n        <h2> Awesome, {props.user.name.split(' ')[0]}. Just to finish up</h2>\n         <h1> Choose an Avatar </h1>\n    </div>\n    <div className={signup.progressContainer}>\n      <p> Last Step! </p>\n      <div className={signup.progress}>\n        <div />\n    </div>\n    </div>\n    </div>\n          <div style={{display: \"flex\"}} >\n          <table>\n            <tr>\n                <td className={signup.label} id=\"name\">\n                </td>\n              </tr>\n              <tr>\n                <td>\n                </td>\n                <td >\n                  <button style={{marginLeft: \"-20px\"}} name=\"avatar\" id=\"dropdownbutton\" onClick={toggledropdown} className={signup.dropdown} > \n                    <FontAwesomeIcon id=\"avatar_icon\" className={ signup.icondropdown } icon={ faUserAstronaut } />\n                      <span name=\"avatar\"> {user.avatar? (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1)   : 'Select Avatar' } </span>\n                    <FontAwesomeIcon name=\"avatar\" id=\"type_icon\" className={ signup.icondropdownright } icon={ faChevronDown } />\n                    </button>\n                  <div id=\"avatardropdownmenu\" className={signup.avatardropdownmenu}>\n                    <div onClick={handleClick} value=\"./whale.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./whale.png\" name=\"avatar\" src='./whale.png' /> </div>\n                    <div onClick={handleClick} value=\"./deer.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./deer.png\" name=\"avatar\" src='./deer.png' /> </div>\n                    <div onClick={handleClick} value=\"./pug.png\" name=\"avatar\" > <img onClick={handleClick} value=\"./pug.png\" name=\"avatar\"  src='./pug.png' /> </div>\n                    <div onClick={handleClick} value=\"./crab.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./crab.png\" name=\"avatar\" src='./crab.png' /> </div>\n                  </div> \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label}>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                </td>\n                <td>\n                  {user.avatar? <img className={signup.avatar} src={user.avatar} /> : <img className={signup.avatar} src='./whale.png' />}\n                </td>\n              </tr> \n              <tr style={{visibility: \"hidden\"}}>\n                <td className={signup.label} id=\"password\">\n                  Password\n                </td>\n              </tr>\n              <tr style={{visibility: \"hidden\"}}>\n                <td>\n                  <FontAwesomeIcon id=\"password_icon\" className={ signup.icon } icon={ faLock } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.password} onFocus={highLight} onBlur={dehighLight} type=\"password\" name=\"password\" placeholder=\"password\" /> <br />\n                </td>\n              </tr>\n            </table>\n            <table>\n            <tr>\n                <td className={signup.label}>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                </td>\n                <td>\n                  \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label}>\n                  \n                </td>\n              </tr>\n              <tr>\n                <td>\n                </td>\n                <td>\n                  <span className={signup.tabletext}> Almost there, {props.user.name.split(' ')[0]}!  Just check your email for the authorization code we've sent you. </span>\n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label} id=\"confirmpassword\">\n                  Code\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"confirmpassword_icon\" className={ signup.icon } icon={ faUserSecret } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.confirmationcode} onFocus={highLight} onBlur={dehighLight} type=\"password\" name=\"confirmpassword\" placeholder=\"authorization code\" /> <br />\n                </td>\n              </tr>\n            </table>\n            </div>\n            <div style={{display: \"flex\", marginTop: \"100px\"}}>\n              <button className={signup.inverted} onClick={() => props.back(user)} > Back </button> \n              <button onClick={HandleSubmit} className={signup.inverted} > Finish </button> \n            </div>\n            \n      </>\n\n  )\n}",["442","443"],"/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/Step2.js",["444","445","446"],"import { React, useState, useEffect } from \"react\";\n\nimport signup from '../../signup.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faAt, faLock, faUser, faLayerGroup } from '@fortawesome/free-solid-svg-icons'\nimport FocusHandler from '../../modules/FocusHandler'\nimport FormValidate from '../../modules/FormValidate'\n\n\nexport default function Step2(props) {\n\n  const [user, setUser] = useState({name: props.user.name, email: props.user.email, password: props.user.password, confirmemail: '', confirmpassword: ''});\n  const [focused, setFocus] = useState({email:false, password:false});\n  useEffect( () => {\n    FocusHandler(focused)\n  });\n  const handleField = (e) => {\n    if(e.target.getAttribute('name') == 'type') {\n      const name = e.target.getAttribute('name');\n      const value = e.target.getAttribute('value');\n      setUser(prevState => ({ ...prevState,[name]: value}));\n      toggledropdown(e);\n    }\n    else {\n      const { name, value } = e.target;\n      setUser(prevState => ({ ...prevState,[name]: value}));\n    }\n  }\n  const highLight = (e) => {\n    if(e.target.getAttribute('name') === 'type') {\n      document.getElementById('dropdownmenu').style.display = 'flex'\n    }\n    else {\n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:true }));\n    }\n  }\n  const dehighLight = (e) => {\n    if(e.target.getAttribute('name') === 'type') {\n      document.getElementById('dropdownmenu').style.display = 'none'\n    }\n     else {\n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:false }));\n    }\n  }\n  const toggledropdown = (e) => {\n    let toggle = document.getElementById('dropdownmenu').style.display;\n    if(toggle === 'none') {\n      document.getElementById('dropdownmenu').style.display = 'flex';\n      document.getElementById('dropdownbutton').style.background = \"#EFEFEF\"\n      document.getElementById('dropdownbutton').style.color = \"#7165E3\"\n      document.getElementById('dropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n      document.getElementById('dropdownbutton').style.border = \"1px solid #CCC\"\n      highLight(e);\n    }\n    else {\n      document.getElementById('dropdownmenu').style.display = 'none';\n      document.getElementById('dropdownbutton').style.background = \"#fff\"\n      document.getElementById('dropdownbutton').style.color = \"#989898\"\n      document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n      document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n      dehighLight(e);\n    }\n  }\n  const nextStep = () => {\n    if( user.name && user.confirmemail && user.confirmpassword) {\n      if(user.confirmemail !== user.email)  {\n        FormValidate(user, 'step2')\n      }\n      else if(user.confirmpassword !== user.password)  {\n        FormValidate(user, 'step2')\n      }\n      else {\n        props.next(user)\n      }\n    }\n    else {\n      FormValidate(user, 'step2')\n    }\n  }\n  return(\n    <>\n    <div className={signup.headercontainer}> \n    <div>\n        <h2> Awesome! Hey, {props.user.name.split(' ')[0]}. Please confirm your</h2>\n         <h1> Account Settings </h1>\n    </div>\n    <div className={signup.progressContainer}>\n      <p> Almost Done! :) </p>\n      <div className={signup.progress}>\n        <div style={{width: \"66%\"}} />\n    </div>\n    </div>\n    </div>\n          <div style={{display: \"flex\"}} >\n          <table >\n            <tr>\n                <td className={signup.label} id=\"name\">\n                  Full Name\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"name_icon\" className={ signup.icon } icon={ faUser } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.name} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"name\" placeholder=\"your full name\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label} id=\"email\">\n                  Email\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"email_icon\" className={ signup.icon } icon={ faAt } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.email} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"email\" placeholder=\"your email address\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label} id=\"password\">\n                  Password\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"password_icon\" className={ signup.icon } icon={ faLock } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.password} onFocus={highLight} onBlur={dehighLight} type=\"password\" name=\"password\" placeholder=\"password\" /> <br />\n                </td>\n              </tr>\n            </table>\n            <table>\n            <tr>\n                <td className={signup.label} id=\"type\">\n                  I am a...\n                </td>\n              </tr>\n              <tr>\n                <td>\n                </td>\n                <td>\n                  <button name=\"type\" id=\"dropdownbutton\" onClick={toggledropdown} className={signup.dropdown} onChange={handleField} placeholder=\"your full name\"> \n                    <FontAwesomeIcon name=\"type\" id=\"type_icon\" className={ signup.icondropdown } icon={ faLayerGroup } />\n                      <span name=\"type\"> {user.type? user.type : 'Account Type' } </span>\n                    <FontAwesomeIcon name=\"type\" id=\"type_icon\" className={ signup.icondropdownright } icon={ faChevronDown } />\n                    </button>\n                  <div id=\"dropdownmenu\" className={signup.dropdownmenu}>\n                    <div onClick={handleField} value=\"Developer\" name=\"type\"> Developer </div>\n                    <div onClick={handleField} value=\"Illustrator\" name=\"type\"> Illustrator </div>\n                    <div onClick={handleField} value=\"Musical Artist\" name=\"type\"> Musical Artist </div>\n                    <div onClick={handleField} value=\"Photographer\" name=\"type\"> Photographer </div>\n                  </div> \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label} id=\"confirmemail\">\n                  Confirm \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"confirmemail_icon\" className={ signup.icon } icon={ faAt } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.confirmemail} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"confirmemail\" placeholder=\"your email address\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label} id=\"confirmpassword\">\n                  Confirm \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"confirmpassword_icon\" className={ signup.icon } icon={ faLock } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.confirmpassword} onFocus={highLight} onBlur={dehighLight} type=\"password\" name=\"confirmpassword\" placeholder=\"password\" /> <br />\n                </td>\n              </tr>\n            </table>\n            </div>\n            <div style={{display: \"flex\", marginTop: \"100px\"}}>\n              <button className={signup.inverted} onClick={() => props.back(user)} > Back </button> \n              <button className={signup.button} onClick={nextStep}> Next Step </button> \n            </div>\n            \n      </>\n\n  )\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/Step1.js",["447","448"],"import { React, useState, useEffect } from \"react\";\nimport {\n Link\n} from \"react-router-dom\";\nimport signup from '../../signup.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAt, faLock, faUser } from '@fortawesome/free-solid-svg-icons'\nimport FocusHandler from '../../modules/FocusHandler'\nimport FormValidate from '../../modules/FormValidate'\n\n\nexport default function Step1(props) {\n\n  const [user, setUser] = useState(props.user);\n  const [focused, setFocus] = useState({email:false, password:false});\n  \n  useEffect( () => {\n    FocusHandler(focused)\n  });\n\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const highLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    const { name, value } = e.target;\n    setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n   const nextStep = () => {\n    if( user.name && user.email && user.password) {\n      props.next(user)\n    }\n    else {\n      FormValidate(user, 'step1')\n    }\n  }\n  return(\n    <>\n    <h2> Create an account to continue </h2>\n          <h1> Getting Started </h1>\n          <table>\n            <tr>\n                <td className={signup.label} id=\"name\">\n                  Full Name\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"name_icon\" className={ signup.icon } icon={ faUser } />\n                </td>\n                <td>\n                  <input id=\"name_input\" onChange={handleField} value={user.name} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"name\" placeholder=\"your full name\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label} id=\"email\">\n                  Email\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"email_icon\" className={ signup.icon } icon={ faAt } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.email} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"email\" placeholder=\"your email address\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={signup.label} id=\"password\">\n                  Password\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"password_icon\" className={ signup.icon } icon={ faLock } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.password} onFocus={highLight} onBlur={dehighLight} type=\"password\" name=\"password\" placeholder=\"password\" /> <br />\n                </td>\n              </tr>\n            </table>\n            <button className={signup.button} onClick={nextStep}> Register </button> \n          <h3> Already registered? <Link to =\"/login\" > Login </Link> </h3>\n      </>\n\n  )\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/modules/FormValidate.js",["449","450","451","452"],"\nexport default function FormValidate(invalid, type) { \n  if(type === 'step1') {\n    Object.keys(invalid).map(\n      (i, key) => {\n        if(invalid[i] === '') {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#e36565\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#e36565\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n  }\n  else if(type === 'step2') {\n    console.log(invalid.confirmpassword === invalid.password)\n    Object.keys(invalid).map(\n      (i, key) => {\n        if(invalid[i] === '') {\n          let element = document.getElementById(i);\n          let element_icon = document.getElementById(i + '_icon');\n          element.style.color = \"#e36565\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#e36565\";\n        }\n        else {\n          let element_icon = document.getElementById(i + '_icon');\n          let element = document.getElementById(i);\n          element.style.color = \"#989898\";\n          element.style.fontWeight = 'normal';\n          element_icon.style.color = \"#DBDBDB\";\n        }\n      }\n    )\n    if(invalid.email !== invalid.confirmemail || invalid.password !== invalid.confirmpassword) {\n        if(invalid.email != invalid.confirmemail) {\n          let element_icon = document.getElementById('confirmemail_icon');\n          let element = document.getElementById('confirmemail');\n          element.style.color = \"#e36565\";\n          element.style.fontWeight = 'bold';\n          element_icon.style.color = \"#e36565\";\n        }\n        else if(invalid.password != invalid.confirmpassword) {\n        let element_icon = document.getElementById('confirmpassword_icon');\n        let element = document.getElementById('confirmpassword');\n        element.style.color = \"#e36565\";\n        element.style.fontWeight = 'bold';\n        element_icon.style.color = \"#e36565\";\n      }\n    } \n  }\n}\n","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/pages/signup/index.js",["453","454","455"],"import { Step1 } from './Step1.js'\nimport { Step2 } from './Step2.js'\nimport { Step3 } from './Step3.js'\n\n\nexport { default as Step1 }  from './Step1.js'\nexport { default as Step2 }  from './Step2.js'\nexport { default as Step3 }  from './Step3.js'\n","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/Resizer.js",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"import { useState, useEffect } from 'react';\nimport edit from '../edit.module.css';\nimport axios from 'axios';\nimport lz from \"lzutf8\";\nimport copy from 'copy-to-clipboard';\nimport { useEditor } from \"@craftjs/core\";\nimport { faTrash, faFileUpload, faLongArrowAltRight, faLongArrowAltDown, faLink, faArrowsAltH, faArrowsAltV } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function Resizer(props) {\n\n \tconst { selected, query, actions } = useEditor((state) => ({\n    selected: state.events.selected\n  }));\n\n  const [dimensions, setDimensions] = useState({height: props.height, width: props.width});\n  const [editing, setedit] = useState(false);\n\n  let selectedNode  = query.node(selected).get();\n  let selection = selected;\n  console.log(selectedNode)\n  const setboth = (e) => {\n  \tif(editing){ \n\t  \tsetDimensions(prevState => ({ ...prevState,['height']: e.clientY }));\n\t  \tsetDimensions(prevState => ({ ...prevState,['width']: e.clientX }));\n\t\t\tprops.change(dimensions);\n\t\t\tcloseitems()\n  \t}\n  }\n  const setHeight = (e) => {\n  \tif(editing) { \n\t  \tsetDimensions(prevState => ({ ...prevState,['height']: e.clientY }));\n\t\t\tprops.change(dimensions);\n\t\t\tcloseitems()\n  \t}\n  }\n  const setWidth = (e) => {\n  \tif(editing) { \n\t  \tsetDimensions(prevState => ({ ...prevState,['width']: e.clientX }));\n\t\t\tprops.change(dimensions);\n\t\t\tcloseitems()\n  \t}\n  }\n  const closeitems = () => {\n  \tdocument.getElementById('resizerboth').style.display = 'none'\n  \tdocument.getElementById('resizerwidth').style.display = 'none'\n  \tdocument.getElementById('resizerheight').style.display = 'none'\n\n  }\n  const openitems = () => {\n  \tlet domLeft = selectedNode.dom.getBoundingClientRect().left;\n\t  \tlet domTop = selectedNode.dom.getBoundingClientRect().top;\n\t\t\tlet resizerboth = document.getElementById('resizerboth')\n\t  \tresizerboth.style.top = domTop  + props.height + 'px'\n\t\t\tresizerboth.style.left = domLeft + props.width + 'px'\n\t  \tresizerboth.style.display = 'flex'\n\n\t  \tlet resizerheight = document.getElementById('resizerheight')\n\t  \tresizerheight.style.top = domTop  + props.height + 'px'\n\t\t\tresizerheight.style.left = domLeft + (props.width/2) + 'px'\n\t  \tresizerheight.style.display = 'flex'\n\n\t  \tlet resizerwidth = document.getElementById('resizerwidth')\n\t  \tresizerwidth.style.top = domTop  + (props.height/2) + 'px'\n\t\t\tresizerwidth.style.left = domLeft + props.width + 'px'\n\t  \tresizerwidth.style.display = 'flex'\n  }\n  useEffect( () => {\n  \tif(selected) {\n\t  \tlet domLeft = selectedNode.dom.offsetLeft;\n\t  \tlet domTop = selectedNode.dom.offsetTop;\n\t\t\tlet resizerboth = document.getElementById('resizerboth')\n\t  \tresizerboth.style.top = domTop  + props.height + 'px'\n\t\t\tresizerboth.style.left = domLeft + props.width + 'px'\n\t  \tresizerboth.style.display = 'flex'\n\n\t  \tlet resizerheight = document.getElementById('resizerheight')\n\t  \tresizerheight.style.top = domTop  + props.height + 'px'\n\t\t\tresizerheight.style.left = domLeft + (props.width/2) + 'px'\n\t  \tresizerheight.style.display = 'flex'\n\n\t  \tlet resizerwidth = document.getElementById('resizerwidth')\n\t  \tresizerwidth.style.top = domTop  + (props.height/2) + 'px'\n\t\t\tresizerwidth.style.left = domLeft + props.width + 'px'\n\t  \tresizerwidth.style.display = 'flex'\n  \t} \n  \telse {\n\t\t\t\tlet resizerboth = document.getElementById('resizerboth')\n\t  \t\tresizerboth.style.display = 'none'\n\t  \t}\n\t  }, []\n );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div onDragStart={()=> setedit(true)} onDrag={setboth} onDragEnd={ () => { setedit(false); openitems() }}  id=\"resizerboth\" className={edit.Resizer} draggable='true'>\n\t       <FontAwesomeIcon className={ edit.icon } icon={ faArrowsAltV } />\n\t      </div> \n\t      <div onDragStart={()=> setedit(true)} onDrag={setHeight} onDragEnd={ () => { setedit(false); openitems() }}  id=\"resizerheight\" className={edit.ResizerHeight} draggable='true'>\n\t       <FontAwesomeIcon className={ edit.icon } icon={ faArrowsAltV } />\n\t      </div> \n\t      <div onDragStart={()=> setedit(true)} onDrag={setWidth} onDragEnd={ () => { setedit(false); openitems() } }  id=\"resizerwidth\" className={edit.ResizerWidth} draggable='true'>\n\t       <FontAwesomeIcon className={ edit.icon } icon={ faArrowsAltV } />\n\t      </div> \n\t\t\t</>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/settings/ProfileSettings.js",["472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"import { useEffect, useState } from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\nimport admin from '../../admin.module.css'\nimport  Toolbar  from '../../components/Toolbar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserAstronaut, faChevronDown, faLock, faUser, faLayerGroup, faUserTag, faAt } from '@fortawesome/free-solid-svg-icons'\nimport FocusHandler from '../../modules/FocusHandler'\nimport axios from 'axios'\n\nexport default function ProfileSettings(props) {\n\tconst [user, setUser] = useState({id: props.user.id, type: props.user.usertype, name: props.user.name, email: props.user.email, password: props.user.password, avatar: './pug.png', username: props.user.username});\n  const [focused, setFocus] = useState();\n\tconst handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const handleClick = (e) => {\n    const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n      if(name === 'avatar') {\n         document.getElementById('avatardropdownmenu').style.display = 'none';\n        document.getElementById('avatardropdownbutton').style.background = \"#fff\"\n        document.getElementById('avatardropdownbutton').style.color = \"#989898\"\n        document.getElementById('avatardropdownbutton').style.borderRadius = \"5px\"\n        document.getElementById('avatardropdownbutton').style.border = \"1px solid #DBDBDB\"\n      }\n     else if(name === 'type') {\n         document.getElementById('dropdownmenu').style.display = 'none';\n        document.getElementById('dropdownbutton').style.background = \"#fff\"\n        document.getElementById('dropdownbutton').style.color = \"#989898\"\n        document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n        document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n     }\n   //   (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1)\n      setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const highLight = (e) => {\n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    \n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n  const toggledropdown = (e) => {\n     const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n      if(name == 'avatar') {\n        if(document.getElementById('avatardropdownmenu').style.display === 'none') {\n          document.getElementById('avatardropdownmenu').style.display = 'flex';\n          document.getElementById('avatardropdownbutton').style.background = \"#EFEFEF\"\n          document.getElementById('avatardropdownbutton').style.color = \"#7165E3\"\n          document.getElementById('avatardropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n          document.getElementById('avatardropdownbutton').style.border = \"1px solid #CCC\"\n        }\n        else {\n          document.getElementById('avatardropdownmenu').style.display = 'none';\n          document.getElementById('avatardropdownbutton').style.background = \"#fff\"\n          document.getElementById('avatardropdownbutton').style.color = \"#989898\"\n          document.getElementById('avatardropdownbutton').style.borderRadius = \"5px\"\n          document.getElementById('avatardropdownbutton').style.border = \"1px solid #DBDBDB\"\n        }\n      }\n      else {\n        if(document.getElementById('dropdownmenu').style.display === 'none') {\n          document.getElementById('dropdownmenu').style.display = 'flex';\n          document.getElementById('dropdownbutton').style.background = \"#EFEFEF\"\n          document.getElementById('dropdownbutton').style.color = \"#7165E3\"\n          document.getElementById('dropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n          document.getElementById('dropdownbutton').style.border = \"1px solid #CCC\"\n        }\n        else {\n          document.getElementById('dropdownmenu').style.display = 'none';\n          document.getElementById('dropdownbutton').style.background = \"#fff\"\n          document.getElementById('dropdownbutton').style.color = \"#989898\"\n          document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n          document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n        }\n      }\n  }\n  useEffect( () => {\n    FocusHandler(focused)\n  });\n  const avatars = [{name: 'bunny'}, {name:'whale'}, {name:'deer'}, {name:'rhino'}, {name:'pug'}, {name:'crab'}, {name:'dino'}, {name:'alien'}];\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n    let token = localStorage.getItem(\"token\")\n  //  fetch('http://localhost:3001/users').then(response => response.json()).then(data => console.log(data));\n    let data = user;\n    data.avatar = (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1);\n    data.usertype = user.type;\n    axios.post('http://localhost:3001/edituser', data, {headers: {Authorization: 'Bearer ' + token }}).then((response) => { console.log(response);if(response.status == 204) { window.location = 'http://localhost:3000/settings' } }).catch(error => { console.log(error.response) });\n  }\n\treturn(\n\t<>\n\t\t<div className={admin.col1}>\n\t\t\t\t\t<h1> Your Avatar </h1>\n\t\t\t\t\t<div style={{display: \"flex\"}} >\n\t\t           <img className={admin.avatar} src={user.avatar} />\n\t\t           <button style={{marginLeft: \"-20px\"}} name=\"avatar\" id=\"avatardropdownbutton\" onClick={toggledropdown} className={admin.dropdown} > \n\t\t            <FontAwesomeIcon id=\"avatar_icon\" className={ admin.icondropdown } icon={ faUserAstronaut } />\n\t\t              <span name=\"avatar\"> {user.avatar? (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1)   : 'Select Avatar' } </span>\n\t\t            <FontAwesomeIcon name=\"avatar\" id=\"type_icon\" className={ admin.icondropdownright } icon={ faChevronDown } />\n\t\t            </button>\n\t\t          <div id=\"avatardropdownmenu\" className={admin.avatardropdownmenu}>\n\t\t            <div onClick={handleClick} value=\"./whale.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./whale.png\" name=\"avatar\" src='./whale.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./deer.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./deer.png\" name=\"avatar\" src='./deer.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./rhino.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./rhino.png\" name=\"avatar\" src='./rhino.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./pug.png\" name=\"avatar\" > <img onClick={handleClick} value=\"./pug.png\" name=\"avatar\"  src='./pug.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./crab.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./crab.png\" name=\"avatar\" src='./crab.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./velociraptor.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./velociraptor.png\" name=\"avatar\" src='./velociraptor.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./alien.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./alien.png\" name=\"avatar\" src='./alien.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./bunny.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./bunny.png\" name=\"avatar\" src='./bunny.png' /> </div>\n\t\t            <div onClick={handleClick} value=\"./pterodactyl.png\" name=\"avatar\"> <img onClick={handleClick} value=\"./pterodactyl.png\" name=\"avatar\" src='./pterodactyl.png' /> </div>\n\t\t          </div> \n\t\t       </div>\n\t\t    </div>\n\t\t    <div className={admin.col2} >\n          <table >\n            <tr>\n                <td className={admin.label} id=\"name\">\n                  Full Name\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"name_icon\" className={ admin.icon } icon={ faUser } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.name} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"name\" placeholder=\"your full name\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={admin.label} id=\"email\">\n                  Email\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"email_icon\" className={ admin.icon } icon={ faAt } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.email} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"email\" placeholder=\"your email\" /> \n                </td>\n              </tr> \n              <tr>\n                <td className={admin.label} id=\"password\">\n                  Password\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"password_icon\" className={ admin.icon } icon={ faLock } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.password} onFocus={highLight} onBlur={dehighLight} type=\"password\" name=\"password\" placeholder=\"password\" /> <br />\n                </td>\n                </tr>\n                <tr>\n                  <td>\n                  <span className={admin.lastchange}>  Last Changed: At account creation</span>\n                  </td>\n              </tr>\n            </table>\n            <table>\n            <tr>\n                <td className={admin.label} id=\"type\">\n                  I am a...\n                </td>\n              </tr>\n              <tr>\n              <td> </td> </tr>\n              <tr> <td> </td> \n                <td>\n                  <button name=\"type\" id=\"dropdownbutton\" onClick={toggledropdown} className={admin.dropdownaccount} onChange={handleField} placeholder=\"your full name\"> \n                    <FontAwesomeIcon name=\"type\" id=\"type_icon\" className={ admin.icondropdown } icon={ faLayerGroup } />\n                      <span name=\"type\"> {user.type? user.type : 'Account Type' } </span>\n                    <FontAwesomeIcon name=\"type\" id=\"type_icon\" className={ admin.icondropdownright } icon={ faChevronDown } />\n                    </button>\n                  <div id=\"dropdownmenu\" className={admin.dropdownmenu}>\n                    <div onClick={handleClick} value=\"Developer\" name=\"type\"> Developer </div>\n                    <div onClick={handleClick} value=\"Illustrator\" name=\"type\"> Illustrator </div>\n                    <div onClick={handleClick} value=\"Musical Artist\" name=\"type\"> Musical Artist </div>\n                    <div onClick={handleClick} value=\"Photographer\" name=\"type\"> Photographer </div>\n                  </div> \n                </td>\n              </tr>\n              <tr>\n                <td className={admin.label} id=\"username\">\n                  Username\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <FontAwesomeIcon id=\"username_icon\" className={ admin.icon } icon={ faUserTag } />\n                </td>\n                <td>\n                  <input onChange={handleField} value={user.username} onFocus={highLight} onBlur={dehighLight} type=\"text\" name=\"username\" placeholder=\"your username\" /> \n                </td>\n              </tr>  \n            </table>\n            </div>\n            <button className={admin.invert} > Deactivate Account </button> \n            <button className={admin.button} onClick={HandleSubmit}> Save Changes </button> \n\t</>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/settings/NotificationSettings.js",["491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511"],"import { useEffect, useState } from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\nimport admin from '../../admin.module.css'\nimport  Toolbar  from '../../components/Toolbar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserAstronaut, faChevronDown, faLock, faUser, faLayerGroup, faUserTag, faAt } from '@fortawesome/free-solid-svg-icons'\nimport FocusHandler from '../../modules/FocusHandler'\nimport axios from 'axios'\n\nexport default function NotificationSettings(props) {\n\tconst [user, setUser] = useState({id: props.user.id, type: props.user.usertype, name: props.user.name, email: props.user.email, password: props.user.password, avatar: './pug.png', username: props.user.username});\n  const [focused, setFocus] = useState();\n\tconst handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const handleClick = (e) => {\n    const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n      if(name === 'avatar') {\n         document.getElementById('avatardropdownmenu').style.display = 'none';\n        document.getElementById('avatardropdownbutton').style.background = \"#fff\"\n        document.getElementById('avatardropdownbutton').style.color = \"#989898\"\n        document.getElementById('avatardropdownbutton').style.borderRadius = \"5px\"\n        document.getElementById('avatardropdownbutton').style.border = \"1px solid #DBDBDB\"\n      }\n     else if(name === 'type') {\n         document.getElementById('dropdownmenu').style.display = 'none';\n        document.getElementById('dropdownbutton').style.background = \"#fff\"\n        document.getElementById('dropdownbutton').style.color = \"#989898\"\n        document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n        document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n     }\n   //   (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1)\n      setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const highLight = (e) => {\n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    \n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n  const toggledropdown = (e) => {\n     const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n      if(name == 'avatar') {\n        if(document.getElementById('avatardropdownmenu').style.display === 'none') {\n          document.getElementById('avatardropdownmenu').style.display = 'flex';\n          document.getElementById('avatardropdownbutton').style.background = \"#EFEFEF\"\n          document.getElementById('avatardropdownbutton').style.color = \"#7165E3\"\n          document.getElementById('avatardropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n          document.getElementById('avatardropdownbutton').style.border = \"1px solid #CCC\"\n        }\n        else {\n          document.getElementById('avatardropdownmenu').style.display = 'none';\n          document.getElementById('avatardropdownbutton').style.background = \"#fff\"\n          document.getElementById('avatardropdownbutton').style.color = \"#989898\"\n          document.getElementById('avatardropdownbutton').style.borderRadius = \"5px\"\n          document.getElementById('avatardropdownbutton').style.border = \"1px solid #DBDBDB\"\n        }\n      }\n      else {\n        if(document.getElementById('dropdownmenu').style.display === 'none') {\n          document.getElementById('dropdownmenu').style.display = 'flex';\n          document.getElementById('dropdownbutton').style.background = \"#EFEFEF\"\n          document.getElementById('dropdownbutton').style.color = \"#7165E3\"\n          document.getElementById('dropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n          document.getElementById('dropdownbutton').style.border = \"1px solid #CCC\"\n        }\n        else {\n          document.getElementById('dropdownmenu').style.display = 'none';\n          document.getElementById('dropdownbutton').style.background = \"#fff\"\n          document.getElementById('dropdownbutton').style.color = \"#989898\"\n          document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n          document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n        }\n      }\n  }\n  useEffect( () => {\n    FocusHandler(focused)\n  });\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n    let token = localStorage.getItem(\"token\")\n  //  fetch('http://localhost:3001/users').then(response => response.json()).then(data => console.log(data));\n    let data = user;\n    data.avatar = (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1);\n    data.usertype = user.type;\n    axios.post('http://localhost:3001/edituser', data, {headers: {Authorization: 'Bearer ' + token }}).then((response) => { console.log(response);if(response.status == 204) { window.location = 'http://localhost:3000/settings' } }).catch(error => { console.log(error.response) });\n  }\n\treturn(\n\t<>\n  <div className={admin.col1}>\n        <h1> Notification Settings </h1>\n        <table>\n          <tr>\n            <td className={admin.labellong} id=\"type\">\n              Email me when followed\n            </td>\n          </tr>\n          <tr>\n              <td>\n              <label className={admin.toggleswitch}>\n                <input type=\"checkbox\"  /> \n                <span className={admin.toggleswitchslider} >\n                 </span>\n              </label>\n            </td>\n            </tr>\n      </table> \n  </div>\n  <div className={admin.col2} >\n        <h1> Privacy Settings </h1>\n    <table >\n      <tr>\n          <td className={admin.labellong}>\n            Show my pages in search\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <label className={admin.toggleswitch}>\n              <input type=\"checkbox\"  /> \n              <span className={admin.toggleswitchslider} >\n               </span>\n            </label>\n          </td>\n        </tr> \n      </table>\n      \n      </div>\n    <button className={admin.button} onClick={HandleSubmit}> Save Changes </button> \n\t</>\n\t)\n}","/Users/arrontaylor/src/com/theportfoliobuilder/admin/src/components/settings/AdvancedSettings.js",["512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532"],"import { useEffect, useState } from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\nimport admin from '../../admin.module.css'\nimport  Toolbar  from '../../components/Toolbar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserAstronaut, faChevronDown, faLock, faUser, faLayerGroup, faUserTag, faAt } from '@fortawesome/free-solid-svg-icons'\nimport FocusHandler from '../../modules/FocusHandler'\nimport axios from 'axios'\n\nexport default function AdvancedSettings(props) {\n  const [user, setUser] = useState({id: props.user.id, type: props.user.usertype, name: props.user.name, email: props.user.email, password: props.user.password, avatar: './pug.png', username: props.user.username});\n  const [focused, setFocus] = useState();\n  const handleField = (e) => {\n    const { name, value } = e.target;\n    setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const handleClick = (e) => {\n    const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n      if(name === 'avatar') {\n         document.getElementById('avatardropdownmenu').style.display = 'none';\n        document.getElementById('avatardropdownbutton').style.background = \"#fff\"\n        document.getElementById('avatardropdownbutton').style.color = \"#989898\"\n        document.getElementById('avatardropdownbutton').style.borderRadius = \"5px\"\n        document.getElementById('avatardropdownbutton').style.border = \"1px solid #DBDBDB\"\n      }\n     else if(name === 'type') {\n         document.getElementById('dropdownmenu').style.display = 'none';\n        document.getElementById('dropdownbutton').style.background = \"#fff\"\n        document.getElementById('dropdownbutton').style.color = \"#989898\"\n        document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n        document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n     }\n   //   (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1)\n      setUser(prevState => ({ ...prevState,[name]: value}));\n  }\n  const highLight = (e) => {\n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:true }));\n  }\n  const dehighLight = (e) => {\n    \n      const { name, value } = e.target;\n      setFocus(prevState => ({ ...prevState, [name]:false }));\n  }\n  const toggledropdown = (e) => {\n     const name = e.target.getAttribute('name');\n      let value = e.target.getAttribute('value');\n      if(name == 'avatar') {\n        if(document.getElementById('avatardropdownmenu').style.display === 'none') {\n          document.getElementById('avatardropdownmenu').style.display = 'flex';\n          document.getElementById('avatardropdownbutton').style.background = \"#EFEFEF\"\n          document.getElementById('avatardropdownbutton').style.color = \"#7165E3\"\n          document.getElementById('avatardropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n          document.getElementById('avatardropdownbutton').style.border = \"1px solid #CCC\"\n        }\n        else {\n          document.getElementById('avatardropdownmenu').style.display = 'none';\n          document.getElementById('avatardropdownbutton').style.background = \"#fff\"\n          document.getElementById('avatardropdownbutton').style.color = \"#989898\"\n          document.getElementById('avatardropdownbutton').style.borderRadius = \"5px\"\n          document.getElementById('avatardropdownbutton').style.border = \"1px solid #DBDBDB\"\n        }\n      }\n      else {\n        if(document.getElementById('dropdownmenu').style.display === 'none') {\n          document.getElementById('dropdownmenu').style.display = 'flex';\n          document.getElementById('dropdownbutton').style.background = \"#EFEFEF\"\n          document.getElementById('dropdownbutton').style.color = \"#7165E3\"\n          document.getElementById('dropdownbutton').style.borderRadius = \"5px 5px 0px 0px\"\n          document.getElementById('dropdownbutton').style.border = \"1px solid #CCC\"\n        }\n        else {\n          document.getElementById('dropdownmenu').style.display = 'none';\n          document.getElementById('dropdownbutton').style.background = \"#fff\"\n          document.getElementById('dropdownbutton').style.color = \"#989898\"\n          document.getElementById('dropdownbutton').style.borderRadius = \"5px\"\n          document.getElementById('dropdownbutton').style.border = \"1px solid #DBDBDB\"\n        }\n      }\n  }\n  useEffect( () => {\n    FocusHandler(focused)\n  });\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n    let token = localStorage.getItem(\"token\")\n  //  fetch('http://localhost:3001/users').then(response => response.json()).then(data => console.log(data));\n    let data = user;\n    data.avatar = (user.avatar.substr(2)).substr(0,1).toUpperCase() + (user.avatar.substr(2)).substr(0, user.avatar.length-6).substr(1);\n    data.usertype = user.type;\n    axios.post('http://localhost:3001/edituser', data, {headers: {Authorization: 'Bearer ' + token }}).then((response) => { console.log(response);if(response.status == 204) { window.location = 'http://localhost:3000/settings' } }).catch(error => { console.log(error.response) });\n  }\n  return(\n  <>\n  <div className={admin.col1}>\n        <h1> Advanced Settings </h1>\n        <table>\n          <tr>\n            <td className={admin.labellong} id=\"type\">\n              Add me in Google Search\n            </td>\n          </tr>\n          <tr>\n              <td>\n              <label className={admin.toggleswitch}>\n                <input type=\"checkbox\"  /> \n                <span className={admin.toggleswitchslider} >\n                 </span>\n              </label>\n            </td>\n            </tr>\n      </table> \n  </div>\n  <div className={admin.col2} >\n       \n      </div>\n    <button className={admin.button} onClick={HandleSubmit}> Save Changes </button> \n  </>\n  )\n}",{"ruleId":"533","severity":1,"message":"534","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":13},{"ruleId":"533","severity":1,"message":"537","line":11,"column":19,"nodeType":"535","messageId":"536","endLine":11,"endColumn":27},{"ruleId":"538","severity":1,"message":"539","line":57,"column":9,"nodeType":"540","endLine":57,"endColumn":37},{"ruleId":"541","replacedBy":"542"},{"ruleId":"543","replacedBy":"544"},{"ruleId":"533","severity":1,"message":"545","line":18,"column":9,"nodeType":"535","messageId":"536","endLine":18,"endColumn":14},{"ruleId":"533","severity":1,"message":"546","line":18,"column":16,"nodeType":"535","messageId":"536","endLine":18,"endColumn":23},{"ruleId":"533","severity":1,"message":"547","line":21,"column":14,"nodeType":"535","messageId":"536","endLine":21,"endColumn":23},{"ruleId":"548","severity":1,"message":"549","line":27,"column":28,"nodeType":"550","messageId":"551","endLine":27,"endColumn":30},{"ruleId":"548","severity":1,"message":"549","line":37,"column":33,"nodeType":"550","messageId":"551","endLine":37,"endColumn":35},{"ruleId":"552","severity":1,"message":"553","line":38,"column":12,"nodeType":"535","messageId":"554","endLine":38,"endColumn":19},{"ruleId":"548","severity":1,"message":"549","line":50,"column":33,"nodeType":"550","messageId":"551","endLine":50,"endColumn":35},{"ruleId":"552","severity":1,"message":"553","line":51,"column":13,"nodeType":"535","messageId":"554","endLine":51,"endColumn":20},{"ruleId":"552","severity":1,"message":"553","line":63,"column":13,"nodeType":"535","messageId":"554","endLine":63,"endColumn":20},{"ruleId":"541","replacedBy":"555"},{"ruleId":"543","replacedBy":"556"},{"ruleId":"548","severity":1,"message":"557","line":58,"column":27,"nodeType":"550","messageId":"551","endLine":58,"endColumn":29},{"ruleId":"541","replacedBy":"558"},{"ruleId":"543","replacedBy":"559"},{"ruleId":"533","severity":1,"message":"560","line":1,"column":10,"nodeType":"535","messageId":"536","endLine":1,"endColumn":18},{"ruleId":"541","replacedBy":"561"},{"ruleId":"543","replacedBy":"562"},{"ruleId":"533","severity":1,"message":"563","line":11,"column":49,"nodeType":"535","messageId":"536","endLine":11,"endColumn":56},{"ruleId":"533","severity":1,"message":"564","line":11,"column":68,"nodeType":"535","messageId":"536","endLine":11,"endColumn":75},{"ruleId":"533","severity":1,"message":"565","line":18,"column":10,"nodeType":"535","messageId":"536","endLine":18,"endColumn":18},{"ruleId":"533","severity":1,"message":"566","line":39,"column":61,"nodeType":"535","messageId":"536","endLine":39,"endColumn":72},{"ruleId":"567","severity":1,"message":"568","line":74,"column":16,"nodeType":"569","messageId":"570","endLine":74,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":99,"column":19,"nodeType":"535","messageId":"536","endLine":99,"endColumn":24},{"ruleId":"541","replacedBy":"572"},{"ruleId":"543","replacedBy":"573"},{"ruleId":"533","severity":1,"message":"560","line":1,"column":10,"nodeType":"535","messageId":"536","endLine":1,"endColumn":18},{"ruleId":"541","severity":1,"message":"574","line":22,"column":5,"nodeType":"535","messageId":"575","endLine":22,"endColumn":10},{"ruleId":"533","severity":1,"message":"576","line":4,"column":18,"nodeType":"535","messageId":"536","endLine":4,"endColumn":25},{"ruleId":"533","severity":1,"message":"577","line":12,"column":39,"nodeType":"535","messageId":"536","endLine":12,"endColumn":46},{"ruleId":"533","severity":1,"message":"563","line":12,"column":58,"nodeType":"535","messageId":"536","endLine":12,"endColumn":65},{"ruleId":"533","severity":1,"message":"564","line":12,"column":77,"nodeType":"535","messageId":"536","endLine":12,"endColumn":84},{"ruleId":"533","severity":1,"message":"565","line":17,"column":10,"nodeType":"535","messageId":"536","endLine":17,"endColumn":18},{"ruleId":"533","severity":1,"message":"578","line":47,"column":10,"nodeType":"535","messageId":"536","endLine":47,"endColumn":14},{"ruleId":"567","severity":1,"message":"568","line":60,"column":16,"nodeType":"569","messageId":"570","endLine":60,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":85,"column":19,"nodeType":"535","messageId":"536","endLine":85,"endColumn":24},{"ruleId":"533","severity":1,"message":"560","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":18},{"ruleId":"533","severity":1,"message":"579","line":3,"column":20,"nodeType":"535","messageId":"536","endLine":3,"endColumn":29},{"ruleId":"533","severity":1,"message":"577","line":7,"column":40,"nodeType":"535","messageId":"536","endLine":7,"endColumn":47},{"ruleId":"533","severity":1,"message":"580","line":7,"column":49,"nodeType":"535","messageId":"536","endLine":7,"endColumn":57},{"ruleId":"533","severity":1,"message":"563","line":7,"column":59,"nodeType":"535","messageId":"536","endLine":7,"endColumn":66},{"ruleId":"533","severity":1,"message":"564","line":7,"column":78,"nodeType":"535","messageId":"536","endLine":7,"endColumn":85},{"ruleId":"581","severity":1,"message":"582","line":25,"column":46,"nodeType":"583","messageId":"584","endLine":25,"endColumn":70,"fix":"585"},{"ruleId":"581","severity":1,"message":"586","line":26,"column":46,"nodeType":"583","messageId":"584","endLine":26,"endColumn":74,"fix":"587"},{"ruleId":"581","severity":1,"message":"588","line":27,"column":46,"nodeType":"583","messageId":"584","endLine":27,"endColumn":66,"fix":"589"},{"ruleId":"533","severity":1,"message":"577","line":10,"column":39,"nodeType":"535","messageId":"536","endLine":10,"endColumn":46},{"ruleId":"533","severity":1,"message":"563","line":10,"column":58,"nodeType":"535","messageId":"536","endLine":10,"endColumn":65},{"ruleId":"533","severity":1,"message":"564","line":10,"column":77,"nodeType":"535","messageId":"536","endLine":10,"endColumn":84},{"ruleId":"533","severity":1,"message":"565","line":15,"column":10,"nodeType":"535","messageId":"536","endLine":15,"endColumn":18},{"ruleId":"590","severity":1,"message":"591","line":24,"column":33,"nodeType":"592","endLine":25,"endColumn":9},{"ruleId":"590","severity":1,"message":"591","line":28,"column":36,"nodeType":"592","endLine":29,"endColumn":9},{"ruleId":"590","severity":1,"message":"591","line":35,"column":33,"nodeType":"592","endLine":36,"endColumn":9},{"ruleId":"590","severity":1,"message":"591","line":39,"column":36,"nodeType":"592","endLine":40,"endColumn":9},{"ruleId":"533","severity":1,"message":"563","line":12,"column":50,"nodeType":"535","messageId":"536","endLine":12,"endColumn":57},{"ruleId":"533","severity":1,"message":"571","line":69,"column":19,"nodeType":"535","messageId":"536","endLine":69,"endColumn":24},{"ruleId":"533","severity":1,"message":"571","line":84,"column":19,"nodeType":"535","messageId":"536","endLine":84,"endColumn":24},{"ruleId":"533","severity":1,"message":"593","line":10,"column":5,"nodeType":"535","messageId":"536","endLine":10,"endColumn":12},{"ruleId":"533","severity":1,"message":"577","line":12,"column":40,"nodeType":"535","messageId":"536","endLine":12,"endColumn":47},{"ruleId":"533","severity":1,"message":"563","line":12,"column":59,"nodeType":"535","messageId":"536","endLine":12,"endColumn":66},{"ruleId":"533","severity":1,"message":"578","line":73,"column":10,"nodeType":"535","messageId":"536","endLine":73,"endColumn":14},{"ruleId":"567","severity":1,"message":"568","line":87,"column":16,"nodeType":"569","messageId":"570","endLine":87,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":112,"column":19,"nodeType":"535","messageId":"536","endLine":112,"endColumn":24},{"ruleId":"594","severity":1,"message":"595","line":215,"column":96,"nodeType":"596","endLine":215,"endColumn":116},{"ruleId":"533","severity":1,"message":"534","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":13},{"ruleId":"533","severity":1,"message":"597","line":5,"column":8,"nodeType":"535","messageId":"536","endLine":5,"endColumn":12},{"ruleId":"533","severity":1,"message":"545","line":12,"column":20,"nodeType":"535","messageId":"536","endLine":12,"endColumn":25},{"ruleId":"533","severity":1,"message":"598","line":12,"column":27,"nodeType":"535","messageId":"536","endLine":12,"endColumn":34},{"ruleId":"541","severity":1,"message":"574","line":19,"column":5,"nodeType":"535","messageId":"575","endLine":19,"endColumn":10},{"ruleId":"533","severity":1,"message":"599","line":8,"column":8,"nodeType":"535","messageId":"536","endLine":8,"endColumn":13},{"ruleId":"533","severity":1,"message":"563","line":14,"column":50,"nodeType":"535","messageId":"536","endLine":14,"endColumn":57},{"ruleId":"533","severity":1,"message":"564","line":14,"column":69,"nodeType":"535","messageId":"536","endLine":14,"endColumn":76},{"ruleId":"533","severity":1,"message":"578","line":54,"column":10,"nodeType":"535","messageId":"536","endLine":54,"endColumn":14},{"ruleId":"567","severity":1,"message":"568","line":67,"column":16,"nodeType":"569","messageId":"570","endLine":67,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":92,"column":19,"nodeType":"535","messageId":"536","endLine":92,"endColumn":24},{"ruleId":"533","severity":1,"message":"600","line":2,"column":9,"nodeType":"535","messageId":"536","endLine":2,"endColumn":15},{"ruleId":"533","severity":1,"message":"601","line":2,"column":17,"nodeType":"535","messageId":"536","endLine":2,"endColumn":22},{"ruleId":"533","severity":1,"message":"602","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":25},{"ruleId":"533","severity":1,"message":"603","line":6,"column":10,"nodeType":"535","messageId":"536","endLine":6,"endColumn":25},{"ruleId":"533","severity":1,"message":"604","line":6,"column":27,"nodeType":"535","messageId":"536","endLine":6,"endColumn":40},{"ruleId":"533","severity":1,"message":"605","line":6,"column":42,"nodeType":"535","messageId":"536","endLine":6,"endColumn":48},{"ruleId":"533","severity":1,"message":"606","line":6,"column":50,"nodeType":"535","messageId":"536","endLine":6,"endColumn":56},{"ruleId":"533","severity":1,"message":"607","line":6,"column":58,"nodeType":"535","messageId":"536","endLine":6,"endColumn":70},{"ruleId":"533","severity":1,"message":"608","line":6,"column":72,"nodeType":"535","messageId":"536","endLine":6,"endColumn":81},{"ruleId":"533","severity":1,"message":"609","line":6,"column":83,"nodeType":"535","messageId":"536","endLine":6,"endColumn":87},{"ruleId":"533","severity":1,"message":"610","line":7,"column":8,"nodeType":"535","messageId":"536","endLine":7,"endColumn":20},{"ruleId":"533","severity":1,"message":"534","line":8,"column":8,"nodeType":"535","messageId":"536","endLine":8,"endColumn":13},{"ruleId":"611","severity":1,"message":"612","line":15,"column":6,"nodeType":"613","endLine":15,"endColumn":8,"suggestions":"614"},{"ruleId":"533","severity":1,"message":"615","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":14},{"ruleId":"533","severity":1,"message":"577","line":15,"column":40,"nodeType":"535","messageId":"536","endLine":15,"endColumn":47},{"ruleId":"533","severity":1,"message":"563","line":15,"column":59,"nodeType":"535","messageId":"536","endLine":15,"endColumn":66},{"ruleId":"533","severity":1,"message":"564","line":15,"column":78,"nodeType":"535","messageId":"536","endLine":15,"endColumn":85},{"ruleId":"538","severity":1,"message":"539","line":45,"column":7,"nodeType":"540","endLine":45,"endColumn":77},{"ruleId":"538","severity":1,"message":"539","line":47,"column":19,"nodeType":"540","endLine":47,"endColumn":89},{"ruleId":"533","severity":1,"message":"571","line":74,"column":19,"nodeType":"535","messageId":"536","endLine":74,"endColumn":24},{"ruleId":"567","severity":1,"message":"568","line":82,"column":16,"nodeType":"569","messageId":"570","endLine":82,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":132,"column":19,"nodeType":"535","messageId":"536","endLine":132,"endColumn":24},{"ruleId":"594","severity":1,"message":"595","line":197,"column":98,"nodeType":"596","endLine":197,"endColumn":116},{"ruleId":"533","severity":1,"message":"578","line":235,"column":10,"nodeType":"535","messageId":"536","endLine":235,"endColumn":14},{"ruleId":"567","severity":1,"message":"568","line":248,"column":16,"nodeType":"569","messageId":"570","endLine":248,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":273,"column":19,"nodeType":"535","messageId":"536","endLine":273,"endColumn":24},{"ruleId":"538","severity":1,"message":"539","line":9,"column":9,"nodeType":"540","endLine":9,"endColumn":33},{"ruleId":"533","severity":1,"message":"571","line":21,"column":19,"nodeType":"535","messageId":"536","endLine":21,"endColumn":24},{"ruleId":"533","severity":1,"message":"571","line":25,"column":19,"nodeType":"535","messageId":"536","endLine":25,"endColumn":24},{"ruleId":"567","severity":1,"message":"568","line":30,"column":16,"nodeType":"569","messageId":"570","endLine":30,"endColumn":18},{"ruleId":"548","severity":1,"message":"549","line":54,"column":107,"nodeType":"550","messageId":"551","endLine":54,"endColumn":109},{"ruleId":"538","severity":1,"message":"539","line":97,"column":9,"nodeType":"540","endLine":97,"endColumn":37},{"ruleId":"533","severity":1,"message":"616","line":1,"column":10,"nodeType":"535","messageId":"536","endLine":1,"endColumn":19},{"ruleId":"533","severity":1,"message":"617","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":19},{"ruleId":"533","severity":1,"message":"618","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":15},{"ruleId":"533","severity":1,"message":"619","line":4,"column":10,"nodeType":"535","messageId":"536","endLine":4,"endColumn":14},{"ruleId":"533","severity":1,"message":"620","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":19},{"ruleId":"533","severity":1,"message":"621","line":6,"column":10,"nodeType":"535","messageId":"536","endLine":6,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":32,"column":43,"nodeType":"583","messageId":"584","endLine":32,"endColumn":57,"fix":"622"},{"ruleId":"581","severity":1,"message":"586","line":33,"column":43,"nodeType":"583","messageId":"584","endLine":33,"endColumn":61,"fix":"623"},{"ruleId":"538","severity":1,"message":"539","line":9,"column":9,"nodeType":"540","endLine":9,"endColumn":34},{"ruleId":"541","replacedBy":"624"},{"ruleId":"543","replacedBy":"625"},{"ruleId":"533","severity":1,"message":"609","line":5,"column":49,"nodeType":"535","messageId":"536","endLine":5,"endColumn":53},{"ruleId":"548","severity":1,"message":"549","line":18,"column":19,"nodeType":"550","messageId":"551","endLine":18,"endColumn":21},{"ruleId":"533","severity":1,"message":"560","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":18},{"ruleId":"533","severity":1,"message":"626","line":18,"column":27,"nodeType":"535","messageId":"536","endLine":18,"endColumn":41},{"ruleId":"533","severity":1,"message":"627","line":18,"column":43,"nodeType":"535","messageId":"536","endLine":18,"endColumn":55},{"ruleId":"611","severity":1,"message":"628","line":40,"column":5,"nodeType":"613","endLine":40,"endColumn":7,"suggestions":"629"},{"ruleId":"533","severity":1,"message":"630","line":1,"column":8,"nodeType":"535","messageId":"536","endLine":1,"endColumn":12},{"ruleId":"533","severity":1,"message":"631","line":5,"column":8,"nodeType":"535","messageId":"536","endLine":5,"endColumn":13},{"ruleId":"533","severity":1,"message":"632","line":7,"column":8,"nodeType":"535","messageId":"536","endLine":7,"endColumn":10},{"ruleId":"541","severity":1,"message":"574","line":21,"column":5,"nodeType":"535","messageId":"575","endLine":21,"endColumn":10},{"ruleId":"533","severity":1,"message":"571","line":42,"column":19,"nodeType":"535","messageId":"536","endLine":42,"endColumn":24},{"ruleId":"533","severity":1,"message":"571","line":46,"column":19,"nodeType":"535","messageId":"536","endLine":46,"endColumn":24},{"ruleId":"533","severity":1,"message":"560","line":1,"column":10,"nodeType":"535","messageId":"536","endLine":1,"endColumn":18},{"ruleId":"533","severity":1,"message":"534","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":13},{"ruleId":"541","replacedBy":"633"},{"ruleId":"543","replacedBy":"634"},{"ruleId":"533","severity":1,"message":"635","line":8,"column":9,"nodeType":"535","messageId":"536","endLine":8,"endColumn":16},{"ruleId":"533","severity":1,"message":"580","line":15,"column":20,"nodeType":"535","messageId":"536","endLine":15,"endColumn":28},{"ruleId":"533","severity":1,"message":"560","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":18},{"ruleId":"533","severity":1,"message":"579","line":3,"column":20,"nodeType":"535","messageId":"536","endLine":3,"endColumn":29},{"ruleId":"533","severity":1,"message":"577","line":10,"column":40,"nodeType":"535","messageId":"536","endLine":10,"endColumn":47},{"ruleId":"533","severity":1,"message":"563","line":10,"column":59,"nodeType":"535","messageId":"536","endLine":10,"endColumn":66},{"ruleId":"533","severity":1,"message":"564","line":10,"column":78,"nodeType":"535","messageId":"536","endLine":10,"endColumn":85},{"ruleId":"541","replacedBy":"636"},{"ruleId":"543","replacedBy":"637"},{"ruleId":"533","severity":1,"message":"577","line":13,"column":40,"nodeType":"535","messageId":"536","endLine":13,"endColumn":47},{"ruleId":"533","severity":1,"message":"563","line":13,"column":59,"nodeType":"535","messageId":"536","endLine":13,"endColumn":66},{"ruleId":"533","severity":1,"message":"564","line":13,"column":78,"nodeType":"535","messageId":"536","endLine":13,"endColumn":85},{"ruleId":"533","severity":1,"message":"598","line":19,"column":27,"nodeType":"535","messageId":"536","endLine":19,"endColumn":34},{"ruleId":"533","severity":1,"message":"638","line":26,"column":9,"nodeType":"535","messageId":"536","endLine":26,"endColumn":18},{"ruleId":"533","severity":1,"message":"639","line":38,"column":10,"nodeType":"535","messageId":"536","endLine":38,"endColumn":19},{"ruleId":"533","severity":1,"message":"640","line":38,"column":21,"nodeType":"535","messageId":"536","endLine":38,"endColumn":33},{"ruleId":"533","severity":1,"message":"565","line":39,"column":10,"nodeType":"535","messageId":"536","endLine":39,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":83,"column":19,"nodeType":"535","messageId":"536","endLine":83,"endColumn":24},{"ruleId":"533","severity":1,"message":"571","line":116,"column":19,"nodeType":"535","messageId":"536","endLine":116,"endColumn":24},{"ruleId":"594","severity":1,"message":"595","line":195,"column":98,"nodeType":"596","endLine":195,"endColumn":116},{"ruleId":"533","severity":1,"message":"578","line":233,"column":10,"nodeType":"535","messageId":"536","endLine":233,"endColumn":14},{"ruleId":"567","severity":1,"message":"568","line":246,"column":16,"nodeType":"569","messageId":"570","endLine":246,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":271,"column":19,"nodeType":"535","messageId":"536","endLine":271,"endColumn":24},{"ruleId":"567","severity":1,"message":"568","line":4,"column":16,"nodeType":"569","messageId":"570","endLine":4,"endColumn":18},{"ruleId":"533","severity":1,"message":"609","line":6,"column":56,"nodeType":"535","messageId":"536","endLine":6,"endColumn":60},{"ruleId":"533","severity":1,"message":"606","line":6,"column":70,"nodeType":"535","messageId":"536","endLine":6,"endColumn":76},{"ruleId":"533","severity":1,"message":"607","line":6,"column":78,"nodeType":"535","messageId":"536","endLine":6,"endColumn":90},{"ruleId":"533","severity":1,"message":"571","line":36,"column":21,"nodeType":"535","messageId":"536","endLine":36,"endColumn":26},{"ruleId":"533","severity":1,"message":"571","line":41,"column":21,"nodeType":"535","messageId":"536","endLine":41,"endColumn":26},{"ruleId":"548","severity":1,"message":"549","line":67,"column":165,"nodeType":"550","messageId":"551","endLine":67,"endColumn":167},{"ruleId":"538","severity":1,"message":"539","line":99,"column":83,"nodeType":"540","endLine":99,"endColumn":164},{"ruleId":"538","severity":1,"message":"539","line":100,"column":82,"nodeType":"540","endLine":100,"endColumn":161},{"ruleId":"538","severity":1,"message":"539","line":101,"column":82,"nodeType":"540","endLine":101,"endColumn":160},{"ruleId":"538","severity":1,"message":"539","line":102,"column":82,"nodeType":"540","endLine":102,"endColumn":161},{"ruleId":"538","severity":1,"message":"539","line":114,"column":33,"nodeType":"540","endLine":114,"endColumn":84},{"ruleId":"538","severity":1,"message":"539","line":114,"column":87,"nodeType":"540","endLine":114,"endColumn":138},{"ruleId":"541","replacedBy":"641"},{"ruleId":"543","replacedBy":"642"},{"ruleId":"548","severity":1,"message":"549","line":18,"column":38,"nodeType":"550","messageId":"551","endLine":18,"endColumn":40},{"ruleId":"533","severity":1,"message":"571","line":34,"column":21,"nodeType":"535","messageId":"536","endLine":34,"endColumn":26},{"ruleId":"533","severity":1,"message":"571","line":43,"column":21,"nodeType":"535","messageId":"536","endLine":43,"endColumn":26},{"ruleId":"533","severity":1,"message":"571","line":26,"column":19,"nodeType":"535","messageId":"536","endLine":26,"endColumn":24},{"ruleId":"533","severity":1,"message":"571","line":30,"column":19,"nodeType":"535","messageId":"536","endLine":30,"endColumn":24},{"ruleId":"567","severity":1,"message":"568","line":5,"column":16,"nodeType":"569","messageId":"570","endLine":5,"endColumn":18},{"ruleId":"567","severity":1,"message":"568","line":26,"column":16,"nodeType":"569","messageId":"570","endLine":26,"endColumn":18},{"ruleId":"548","severity":1,"message":"557","line":44,"column":26,"nodeType":"550","messageId":"551","endLine":44,"endColumn":28},{"ruleId":"548","severity":1,"message":"557","line":51,"column":34,"nodeType":"550","messageId":"551","endLine":51,"endColumn":36},{"ruleId":"533","severity":1,"message":"643","line":1,"column":10,"nodeType":"535","messageId":"536","endLine":1,"endColumn":15},{"ruleId":"533","severity":1,"message":"644","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":15},{"ruleId":"533","severity":1,"message":"645","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":15},{"ruleId":"533","severity":1,"message":"534","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":13},{"ruleId":"533","severity":1,"message":"632","line":4,"column":8,"nodeType":"535","messageId":"536","endLine":4,"endColumn":10},{"ruleId":"533","severity":1,"message":"597","line":5,"column":8,"nodeType":"535","messageId":"536","endLine":5,"endColumn":12},{"ruleId":"533","severity":1,"message":"646","line":7,"column":10,"nodeType":"535","messageId":"536","endLine":7,"endColumn":17},{"ruleId":"533","severity":1,"message":"647","line":7,"column":19,"nodeType":"535","messageId":"536","endLine":7,"endColumn":31},{"ruleId":"533","severity":1,"message":"648","line":7,"column":33,"nodeType":"535","messageId":"536","endLine":7,"endColumn":52},{"ruleId":"533","severity":1,"message":"649","line":7,"column":54,"nodeType":"535","messageId":"536","endLine":7,"endColumn":72},{"ruleId":"533","severity":1,"message":"650","line":7,"column":74,"nodeType":"535","messageId":"536","endLine":7,"endColumn":80},{"ruleId":"533","severity":1,"message":"651","line":7,"column":82,"nodeType":"535","messageId":"536","endLine":7,"endColumn":94},{"ruleId":"533","severity":1,"message":"546","line":12,"column":28,"nodeType":"535","messageId":"536","endLine":12,"endColumn":35},{"ruleId":"533","severity":1,"message":"652","line":20,"column":7,"nodeType":"535","messageId":"536","endLine":20,"endColumn":16},{"ruleId":"581","severity":1,"message":"653","line":24,"column":48,"nodeType":"583","messageId":"584","endLine":24,"endColumn":69,"fix":"654"},{"ruleId":"581","severity":1,"message":"655","line":25,"column":48,"nodeType":"583","messageId":"584","endLine":25,"endColumn":68,"fix":"656"},{"ruleId":"581","severity":1,"message":"653","line":32,"column":48,"nodeType":"583","messageId":"584","endLine":32,"endColumn":69,"fix":"657"},{"ruleId":"581","severity":1,"message":"655","line":39,"column":48,"nodeType":"583","messageId":"584","endLine":39,"endColumn":68,"fix":"658"},{"ruleId":"611","severity":1,"message":"659","line":91,"column":7,"nodeType":"613","endLine":91,"endColumn":9,"suggestions":"660"},{"ruleId":"533","severity":1,"message":"600","line":2,"column":9,"nodeType":"535","messageId":"536","endLine":2,"endColumn":15},{"ruleId":"533","severity":1,"message":"601","line":2,"column":17,"nodeType":"535","messageId":"536","endLine":2,"endColumn":22},{"ruleId":"533","severity":1,"message":"661","line":4,"column":9,"nodeType":"535","messageId":"536","endLine":4,"endColumn":16},{"ruleId":"533","severity":1,"message":"571","line":38,"column":21,"nodeType":"535","messageId":"536","endLine":38,"endColumn":26},{"ruleId":"533","severity":1,"message":"571","line":43,"column":21,"nodeType":"535","messageId":"536","endLine":43,"endColumn":26},{"ruleId":"533","severity":1,"message":"571","line":48,"column":11,"nodeType":"535","messageId":"536","endLine":48,"endColumn":16},{"ruleId":"548","severity":1,"message":"549","line":49,"column":15,"nodeType":"550","messageId":"551","endLine":49,"endColumn":17},{"ruleId":"533","severity":1,"message":"662","line":85,"column":9,"nodeType":"535","messageId":"536","endLine":85,"endColumn":16},{"ruleId":"548","severity":1,"message":"549","line":93,"column":166,"nodeType":"550","messageId":"551","endLine":93,"endColumn":168},{"ruleId":"538","severity":1,"message":"539","line":100,"column":14,"nodeType":"540","endLine":100,"endColumn":64},{"ruleId":"538","severity":1,"message":"539","line":107,"column":77,"nodeType":"540","endLine":107,"endColumn":158},{"ruleId":"538","severity":1,"message":"539","line":108,"column":76,"nodeType":"540","endLine":108,"endColumn":155},{"ruleId":"538","severity":1,"message":"539","line":109,"column":77,"nodeType":"540","endLine":109,"endColumn":158},{"ruleId":"538","severity":1,"message":"539","line":110,"column":76,"nodeType":"540","endLine":110,"endColumn":154},{"ruleId":"538","severity":1,"message":"539","line":111,"column":76,"nodeType":"540","endLine":111,"endColumn":155},{"ruleId":"538","severity":1,"message":"539","line":112,"column":84,"nodeType":"540","endLine":112,"endColumn":179},{"ruleId":"538","severity":1,"message":"539","line":113,"column":77,"nodeType":"540","endLine":113,"endColumn":158},{"ruleId":"538","severity":1,"message":"539","line":114,"column":77,"nodeType":"540","endLine":114,"endColumn":158},{"ruleId":"538","severity":1,"message":"539","line":115,"column":83,"nodeType":"540","endLine":115,"endColumn":176},{"ruleId":"533","severity":1,"message":"600","line":2,"column":9,"nodeType":"535","messageId":"536","endLine":2,"endColumn":15},{"ruleId":"533","severity":1,"message":"601","line":2,"column":17,"nodeType":"535","messageId":"536","endLine":2,"endColumn":22},{"ruleId":"533","severity":1,"message":"661","line":4,"column":9,"nodeType":"535","messageId":"536","endLine":4,"endColumn":16},{"ruleId":"533","severity":1,"message":"602","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":25},{"ruleId":"533","severity":1,"message":"603","line":6,"column":10,"nodeType":"535","messageId":"536","endLine":6,"endColumn":25},{"ruleId":"533","severity":1,"message":"604","line":6,"column":27,"nodeType":"535","messageId":"536","endLine":6,"endColumn":40},{"ruleId":"533","severity":1,"message":"605","line":6,"column":42,"nodeType":"535","messageId":"536","endLine":6,"endColumn":48},{"ruleId":"533","severity":1,"message":"606","line":6,"column":50,"nodeType":"535","messageId":"536","endLine":6,"endColumn":56},{"ruleId":"533","severity":1,"message":"607","line":6,"column":58,"nodeType":"535","messageId":"536","endLine":6,"endColumn":70},{"ruleId":"533","severity":1,"message":"608","line":6,"column":72,"nodeType":"535","messageId":"536","endLine":6,"endColumn":81},{"ruleId":"533","severity":1,"message":"609","line":6,"column":83,"nodeType":"535","messageId":"536","endLine":6,"endColumn":87},{"ruleId":"533","severity":1,"message":"663","line":13,"column":8,"nodeType":"535","messageId":"536","endLine":13,"endColumn":19},{"ruleId":"533","severity":1,"message":"664","line":17,"column":9,"nodeType":"535","messageId":"536","endLine":17,"endColumn":20},{"ruleId":"533","severity":1,"message":"665","line":37,"column":9,"nodeType":"535","messageId":"536","endLine":37,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":38,"column":21,"nodeType":"535","messageId":"536","endLine":38,"endColumn":26},{"ruleId":"533","severity":1,"message":"666","line":41,"column":9,"nodeType":"535","messageId":"536","endLine":41,"endColumn":20},{"ruleId":"533","severity":1,"message":"571","line":43,"column":21,"nodeType":"535","messageId":"536","endLine":43,"endColumn":26},{"ruleId":"533","severity":1,"message":"667","line":46,"column":9,"nodeType":"535","messageId":"536","endLine":46,"endColumn":23},{"ruleId":"533","severity":1,"message":"571","line":48,"column":11,"nodeType":"535","messageId":"536","endLine":48,"endColumn":16},{"ruleId":"548","severity":1,"message":"549","line":49,"column":15,"nodeType":"550","messageId":"551","endLine":49,"endColumn":17},{"ruleId":"548","severity":1,"message":"549","line":92,"column":166,"nodeType":"550","messageId":"551","endLine":92,"endColumn":168},{"ruleId":"533","severity":1,"message":"600","line":2,"column":9,"nodeType":"535","messageId":"536","endLine":2,"endColumn":15},{"ruleId":"533","severity":1,"message":"601","line":2,"column":17,"nodeType":"535","messageId":"536","endLine":2,"endColumn":22},{"ruleId":"533","severity":1,"message":"661","line":4,"column":9,"nodeType":"535","messageId":"536","endLine":4,"endColumn":16},{"ruleId":"533","severity":1,"message":"602","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":25},{"ruleId":"533","severity":1,"message":"603","line":6,"column":10,"nodeType":"535","messageId":"536","endLine":6,"endColumn":25},{"ruleId":"533","severity":1,"message":"604","line":6,"column":27,"nodeType":"535","messageId":"536","endLine":6,"endColumn":40},{"ruleId":"533","severity":1,"message":"605","line":6,"column":42,"nodeType":"535","messageId":"536","endLine":6,"endColumn":48},{"ruleId":"533","severity":1,"message":"606","line":6,"column":50,"nodeType":"535","messageId":"536","endLine":6,"endColumn":56},{"ruleId":"533","severity":1,"message":"607","line":6,"column":58,"nodeType":"535","messageId":"536","endLine":6,"endColumn":70},{"ruleId":"533","severity":1,"message":"608","line":6,"column":72,"nodeType":"535","messageId":"536","endLine":6,"endColumn":81},{"ruleId":"533","severity":1,"message":"609","line":6,"column":83,"nodeType":"535","messageId":"536","endLine":6,"endColumn":87},{"ruleId":"533","severity":1,"message":"663","line":13,"column":9,"nodeType":"535","messageId":"536","endLine":13,"endColumn":20},{"ruleId":"533","severity":1,"message":"664","line":17,"column":9,"nodeType":"535","messageId":"536","endLine":17,"endColumn":20},{"ruleId":"533","severity":1,"message":"665","line":37,"column":9,"nodeType":"535","messageId":"536","endLine":37,"endColumn":18},{"ruleId":"533","severity":1,"message":"571","line":38,"column":21,"nodeType":"535","messageId":"536","endLine":38,"endColumn":26},{"ruleId":"533","severity":1,"message":"666","line":41,"column":9,"nodeType":"535","messageId":"536","endLine":41,"endColumn":20},{"ruleId":"533","severity":1,"message":"571","line":43,"column":21,"nodeType":"535","messageId":"536","endLine":43,"endColumn":26},{"ruleId":"533","severity":1,"message":"667","line":46,"column":9,"nodeType":"535","messageId":"536","endLine":46,"endColumn":23},{"ruleId":"533","severity":1,"message":"571","line":48,"column":11,"nodeType":"535","messageId":"536","endLine":48,"endColumn":16},{"ruleId":"548","severity":1,"message":"549","line":49,"column":15,"nodeType":"550","messageId":"551","endLine":49,"endColumn":17},{"ruleId":"548","severity":1,"message":"549","line":92,"column":166,"nodeType":"550","messageId":"551","endLine":92,"endColumn":168},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'setFocus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["668"],"no-negated-in-lhs",["669"],"'query' is assigned a value but never used.","'actions' is assigned a value but never used.","'collected' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'element' is already defined.","redeclared",["668"],["669"],"Expected '!==' and instead saw '!='.",["668"],["669"],"'useState' is defined but never used.",["668"],["669"],"'dragged' is assigned a value but never used.","'setProp' is assigned a value but never used.","'editable' is assigned a value but never used.","'draggedover' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'value' is assigned a value but never used.",["668"],["669"],"Read-only global 'alert' should not be modified.","nativeReassign","'Element' is defined but never used.","'hovered' is assigned a value but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'selected' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['id'] found.","Property","unnecessarilyComputedProperty",{"range":"670","text":"671"},"Unnecessarily computed property ['name'] found.",{"range":"672","text":"673"},"Unnecessarily computed property ['isLoggedIn'] found.",{"range":"674","text":"675"},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'current' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'copy' is defined but never used.","'enabled' is assigned a value but never used.","'style' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faUserAstronaut' is defined but never used.","'faChevronDown' is defined but never used.","'faLock' is defined but never used.","'faUser' is defined but never used.","'faLayerGroup' is defined but never used.","'faUserTag' is defined but never used.","'faAt' is defined but never used.","'FocusHandler' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.user'. Either include it or remove the dependency array. If 'setTab' needs the current value of 'props.user', you can also switch to useReducer instead of useState and read 'props.user' in the reducer.","ArrayExpression",["676"],"'Link' is defined but never used.","'Dashboard' is defined but never used.","'Analytics' is defined but never used.","'Pages' is defined but never used.","'Edit' is defined but never used.","'Inquiries' is defined but never used.","'Settings' is defined but never used.",{"range":"677","text":"671"},{"range":"678","text":"673"},["668"],["669"],"'selectedNodeId' is assigned a value but never used.","'selectedNode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actions' and 'nodeTree'. Either include them or remove the dependency array.",["679"],"'edit' is defined but never used.","'login' is defined but never used.","'lz' is defined but never used.",["668"],["669"],"'setNull' is assigned a value but never used.",["668"],["669"],"'duplicate' is assigned a value but never used.","'draggable' is assigned a value but never used.","'setDraggable' is assigned a value but never used.",["668"],["669"],"'Step1' is defined but never used.","'Step2' is defined but never used.","'Step3' is defined but never used.","'faTrash' is defined but never used.","'faFileUpload' is defined but never used.","'faLongArrowAltRight' is defined but never used.","'faLongArrowAltDown' is defined but never used.","'faLink' is defined but never used.","'faArrowsAltH' is defined but never used.","'selection' is assigned a value but never used.","Unnecessarily computed property ['height'] found.",{"range":"680","text":"681"},"Unnecessarily computed property ['width'] found.",{"range":"682","text":"683"},{"range":"684","text":"681"},{"range":"685","text":"683"},"React Hook useEffect has missing dependencies: 'props.height', 'props.width', 'selected', 'selectedNode.dom.offsetLeft', and 'selectedNode.dom.offsetTop'. Either include them or remove the dependency array.",["686"],"'Toolbar' is defined but never used.","'avatars' is assigned a value but never used.","'handleField' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'highLight' is assigned a value but never used.","'dehighLight' is assigned a value but never used.","'toggledropdown' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[808,814],"'id'",[882,890],"'name'",[960,974],"'isLoggedIn'",{"desc":"687","fix":"688"},[1083,1089],[1145,1153],{"desc":"689","fix":"690"},[919,929],"'height'",[993,1002],"'width'",[1167,1177],[1341,1350],{"desc":"691","fix":"692"},"Update the dependencies array to be: [props.user]",{"range":"693","text":"694"},"Update the dependencies array to be: [actions, nodeTree]",{"range":"695","text":"696"},"Update the dependencies array to be: [props.height, props.width, selected, selectedNode.dom.offsetLeft, selectedNode.dom.offsetTop]",{"range":"697","text":"698"},[671,673],"[props.user]",[1579,1581],"[actions, nodeTree]",[3410,3412],"[props.height, props.width, selected, selectedNode.dom.offsetLeft, selectedNode.dom.offsetTop]"]